(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    547115,       9960]
NotebookOptionsPosition[    544127,       9879]
NotebookOutlinePosition[    544469,       9894]
CellTagsIndexPosition[    544426,       9891]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.ultianalytics.com/app/#/5725038607073280/games?game-\
b56b6337-78a2-42b7-b2af-7cc58d5dce00\>\"", ",", "\"\<Source\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7072169321276846`*^9, 3.707216936513691*^9}, {
  3.7072170211435814`*^9, 3.707217029850178*^9}, {3.707217067427539*^9, 
  3.707217092630167*^9}},ExpressionUUID->"86d04944-6e47-4124-b1c0-\
d1dd3ddcf81c"],

Cell[BoxData["\<\"<!doctype html>\\n<!--[if lt IE 10]><p \
class=chromeframe>Your browser is <b><em>ancient!</em></b> Please <a \
href=\\\"http://browsehappy.com/\\\">upgrade to a more modern browser</a> to \
view this site.</p><![endif]-->\\n<html class=\\\"no-js\\\">\\n  <head>\\n    \
<meta charset=\\\"utf-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" \
content=\\\"IE=edge\\\">\\n    <title>iUltimate</title>\\n    <meta \
name=\\\"description\\\" content=\\\"\\\">\\n    <meta name=\\\"viewport\\\" \
content=\\\"width=device-width\\\">\\n    <meta name=\\\"viewport\\\" \
content=\\\"width=device-width, initial-scale=1.0, maximum-scale=1.0, \
user-scalable=no\\\">\\n    <meta name=\\\"apple-mobile-web-app-capable\\\" \
content=\\\"yes\\\">\\n    <link href=\\\"./styles/main.css\\\" \
rel=\\\"stylesheet\\\">\\n\\n</head>\\n  <body ng-app=\\\"newBetaApp\\\">\\n  \
<div ng-view=\\\"\\\">\\n    <div ng-controller=\\\"MainCtrl\\\"></div>\\n  \
</div>\\n\\n    <script type=\\\"text/javascript\\\">\\n        var _gaq = \
_gaq || [];\\n        _gaq.push(['_setAccount', 'UA-31918750-1']);\\n        \
_gaq.push(['_trackPageview']);\\n\\n        (function() {\\n          var ga \
= document.createElement('script'); ga.type = 'text/javascript'; ga.async = \
true;\\n          ga.src = ('https:' == document.location.protocol ? \
'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\\n          \
var s = document.getElementsByTagName('script')[0]; \
s.parentNode.insertBefore(ga, s);\\n        })();\\n    </script>\\n\\n\\n    \
<script type=\\\"text/javascript\\\" \
src=\\\"http://connect.facebook.net/en_US/sdk.js\\\"></script>\\n    <script \
src=\\\"http://www.ultianalytics.com/js/explanations.js\\\"></script>\\n    \
<script src=\\\"http://ajax.googleapis.com/ajax/libs/jquery/1.8.0/jquery.min.\
js\\\"></script>\\n    <script \
src=\\\"http://ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular.min.js\\\
\"></script>\\n    <script \
src=\\\"http://cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.js\\\"></\
script>\\n    <script \
src=\\\"http://cdnjs.cloudflare.com/ajax/libs/d3/3.4.1/d3.min.js\\\"></script>\
\\n    <script src=\\\"./js/modules.js\\\"></script>\\n    <script \
src=\\\"./js/scripts.js\\\"></script>\\n  </body>\\n</html>\"\>"], "Output",
 CellChangeTimes->{
  3.7072170363116083`*^9, {3.7072170690745163`*^9, 
   3.7072170938150873`*^9}},ExpressionUUID->"619f0aa3-b284-4d0a-bb3b-\
94e9e10a2374"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringTake", "[", 
  RowBox[{
   RowBox[{
   "URLFetch", "[", 
    "\"\<http://www.ultianalytics.com/app/#/5725038607073280/games?game-\
b56b6337-78a2-42b7-b2af-7cc58d5dce00\>\"", "]"}], ",", "1000"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.707217120607996*^9, 3.707217140730533*^9}, 
   3.7072171813809347`*^9, {3.7072172177805357`*^9, 
   3.7072172470677085`*^9}},ExpressionUUID->"887399c5-3220-44c3-b045-\
8333ab0ff610"],

Cell[BoxData["\<\"<!doctype html>\\n<!--[if lt IE 10]><p \
class=chromeframe>Your browser is <b><em>ancient!</em></b> Please <a \
href=\\\"http://browsehappy.com/\\\">upgrade to a more modern browser</a> to \
view this site.</p><![endif]-->\\n<html class=\\\"no-js\\\">\\n  <head>\\n    \
<meta charset=\\\"utf-8\\\">\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" \
content=\\\"IE=edge\\\">\\n    <title>iUltimate</title>\\n    <meta \
name=\\\"description\\\" content=\\\"\\\">\\n    <meta name=\\\"viewport\\\" \
content=\\\"width=device-width\\\">\\n    <meta name=\\\"viewport\\\" \
content=\\\"width=device-width, initial-scale=1.0, maximum-scale=1.0, \
user-scalable=no\\\">\\n    <meta name=\\\"apple-mobile-web-app-capable\\\" \
content=\\\"yes\\\">\\n    <link href=\\\"./styles/main.css\\\" \
rel=\\\"stylesheet\\\">\\n\\n</head>\\n  <body ng-app=\\\"newBetaApp\\\">\\n  \
<div ng-view=\\\"\\\">\\n    <div ng-controller=\\\"MainCtrl\\\"></div>\\n  \
</div>\\n\\n    <script type=\\\"text/javascript\\\">\\n        var _gaq = \
_gaq || [];\\n        _gaq.push(['_setAccount', 'UA-31918750-1']);\\n        \
_gaq.push(['_trackPageview']);\\n\\n        (function() {\\n          var ga \
= document.create\"\>"], "Output",
 CellChangeTimes->{{3.7072172249641066`*^9, 
  3.707217247582502*^9}},ExpressionUUID->"c3aa407e-22a5-4c7a-b03d-\
0538b81ba036"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"\"\<http://www.ultianalytics.com/\>\"", ",", "\"\<Data\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7072173390298862`*^9, 3.7072173469946737`*^9}, {
  3.7072174627573214`*^9, 
  3.707217479733635*^9}},ExpressionUUID->"e8ec9a06-13c5-4bfa-8de4-\
3bae13e6d93a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Home\"\>", ",", "\<\"Details\"\>", 
     ",", "\<\"Get Started\"\>", ",", "\<\"Support\"\>", 
     ",", "\<\"Calculations\"\>", ",", "\<\"Contact\"\>", 
     ",", "\<\"Admin\"\>", ",", "\<\"Privacy\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Recent Games\"\>", ",", "\<\"Score\"\>", 
     ",", "\<\"Last Updated\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7072174819928513`*^9},ExpressionUUID->"906ca9f6-d4b0-4b37-b0c5-\
85080505817f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"URLDownload", "[", "\"\<http://www.ultianalytics.com/\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.707217620051609*^9, 
  3.7072176266820564`*^9}},ExpressionUUID->"fee15b2e-64af-4cc9-b495-\
317846c58724"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"C:\\\\Users\\\\praha\\\\AppData\\\\Local\\\\Temp\\\\79ce0649-0f81-4db0-\
9872-9b2b4f486b42.tmp\""},
   "FileArgument"], "]"}]], "Output",
 CellChangeTimes->{
  3.7072176292042694`*^9},ExpressionUUID->"981ecea6-989b-4b42-88d8-\
5bc0443106cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.usaultimate.org/archives/2015.aspx\>\"", ",", 
   "\"\<Data\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7072180582278347`*^9, 
  3.7072180747513876`*^9}},ExpressionUUID->"8aed4b54-c2f9-4285-ade2-\
e8dd7fc11d1e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"Facebook\"\>", ",", "\<\"Twitter\"\>", 
         ",", "\<\"Google\"\>", ",", "\<\"Youtube\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\<\" 2017 Vision Tour \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" USA Ultimate Staff \"\>", 
             ",", "\<\" Youth Division \"\>", 
             ",", "\<\" College Division \"\>", 
             ",", "\<\" Club Division \"\>", 
             ",", "\<\" Masters Division \"\>", 
             ",", "\<\" Beach Division \"\>", 
             ",", "\<\" USA Ultimate Affiliates \"\>", 
             ",", "\<\" State-Based Organizations \"\>", 
             ",", "\<\" Board of Directors \"\>"}], "}"}], 
           ",", "\<\" Where to Play \"\>", 
           ",", "\<\" Spirit of the Game \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Annual Report (2015) \"\>", 
             ",", "\<\" Volunteer & Job Opportunities \"\>"}], "}"}], 
           ",", "\<\" Equity and Diversity \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Bylaws (2014) \"\>", 
             ",", "\<\" Strategic Plan (2013-2018) \"\>"}], "}"}], 
           ",", "\<\" Hall of Fame \"\>", ",", "\<\" History / Archives \"\>",
            ",", "\<\" Sponsorship \"\>", ",", "\<\" FAQs \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\" iOS \"\>", ",", "\<\" Android \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" 2016 Spring issue \"\>", 
             ",", "\<\" 2015 Summer issue \"\>", 
             ",", "\<\" 2015 Fall Issue \"\>", 
             ",", "\<\" 2015 Winter Issue \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" College Men's \"\>", 
             ",", "\<\" College Women's \"\>", ",", "\<\" TCT Men's \"\>", 
             ",", "\<\" TCT Mixed \"\>", ",", "\<\" TCT Women's \"\>"}], 
            "}"}], ",", "\<\" USA Ultimate Weekly \"\>", 
           ",", "\<\" College News \"\>", 
           ",", "\<\" Triple Crown Tour News \"\>", 
           ",", "\<\" Beach News \"\>", ",", "\<\" Youth News \"\>", 
           ",", "\<\" National Teams News \"\>", ",", "\<\" Videos \"\>"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\" League Calendar \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" 2016 \"\>", ",", "\<\" 2015 \"\>", 
             ",", "\<\" 2014 \"\>", ",", "\<\" 2013 \"\>", 
             ",", "\<\" 2012 \"\>", ",", "\<\" 2011 \"\>", 
             ",", "\<\" 2010 \"\>", ",", "\<\" 2009 \"\>", 
             ",", "\<\" 2008 \"\>", ",", "\<\" 2007 \"\>", 
             ",", "\<\" 2006 \"\>", ",", "\<\" 2005 \"\>", 
             ",", "\<\" 2004 \"\>", ",", "\<\" 2003 \"\>", 
             ",", "\<\" 2002 \"\>", ",", "\<\" 2001 \"\>", 
             ",", "\<\" 2000 \"\>", ",", "\<\" 1999 \"\>", 
             ",", "\<\" 1998 \"\>", ",", "\<\" 1997 \"\>", 
             ",", "\<\" 1996 \"\>", ",", "\<\" 1995 \"\>", 
             ",", "\<\" 1994 \"\>", ",", "\<\" 1993 \"\>", 
             ",", "\<\" 1992 \"\>", ",", "\<\" 1991 \"\>", 
             ",", "\<\" 1990 \"\>", ",", "\<\" 1989 \"\>", 
             ",", "\<\" 1988 \"\>", ",", "\<\" 1987 \"\>", 
             ",", "\<\" 1986 \"\>", ",", "\<\" 1985 \"\>", 
             ",", "\<\" 1984 \"\>", ",", "\<\" 1983 \"\>", 
             ",", "\<\" 1982 \"\>", ",", "\<\" 1981 \"\>", 
             ",", "\<\" 1980 \"\>", ",", "\<\" 1979 \"\>"}], "}"}], 
           ",", "\<\" Beach Championships \"\>", 
           ",", "\<\" Beach Westerns \"\>", ",", "\<\" H.S. States \"\>", 
           ",", "\<\" Youth Club \"\>", ",", "\<\" D-III College \"\>", 
           ",", "\<\" D-I College \"\>", ",", "\<\" U.S. Open \"\>", 
           ",", "\<\" Elite-Select Challenge \"\>", 
           ",", "\<\" Pro-Elite Challenge \"\>", 
           ",", "\<\" Select Flight Invite \"\>", 
           ",", "\<\" Pro Flight Finale \"\>", 
           ",", "\<\" National Championships \"\>", 
           ",", "\<\" Masters Championships \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\" Youth Guidelines (2017) \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" College Eligibility \"\>", 
             ",", "\<\" College Guidelines (2017) \"\>", 
             ",", "\<\" College Resources \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" TCT Guidelines (2017) \"\>", 
             ",", "\<\" U.S. Open Ultimate Championships \"\>"}], "}"}], 
           ",", "\<\" Masters Guidelines (2017) \"\>", 
           ",", "\<\" Beach Guidelines (2017) \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" 2016 WJUC \"\>", ",", "\<\" 2016 WUGC \"\>", 
             ",", "\<\" 2017 WCBU \"\>", ",", "\<\" 2017 World Games \"\>", 
             ",", "\<\" 2018 WU24 \"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\" About \"\>", ",", "\<\" Benefits \"\>", 
             ",", "\<\" Current Affiliates \"\>", 
             ",", "\<\" Document Resources \"\>", 
             ",", "\<\" Event Registration \"\>", ",", "\<\" FAQ \"\>"}], 
            "}"}], ",", "\<\" Camps \"\>", ",", "\<\" Youth Safety \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Coaching Development Program \"\>", 
             ",", "\<\" Athlete Protection \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" League Sanctioning \"\>", 
             ",", "\<\" Tournament Sanctioning \"\>", 
             ",", "\<\" Practice Insurance \"\>"}], "}"}], 
           ",", "\<\" Girls' Ultimate Movement (GUM) \"\>", 
           ",", "\<\" Learn to Play \"\>", 
           ",", "\<\" National Conventions \"\>", 
           ",", "\<\" New Start Grant Kits \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Bid to Host USA Ultimate Events \"\>", 
             ",", "\<\" Tournament Director's Certification Program \"\>", 
             ",", "\<\" Youth & Education Resources \"\>", 
             ",", "\<\" College Development \"\>", 
             ",", "\<\" Ultimate in Your Community \"\>", 
             ",", "\<\" Women's Development \"\>"}], "}"}], 
           ",", "\<\" Parent Resources \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Rules \"\>", 
             ",", "\<\" Observer Certification Program \"\>", 
             ",", "\<\" Disc Standards \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Benefits & Requirements \"\>", ",", "\<\" FAQ \"\>",
              ",", "\<\" Contact State Orgs \"\>"}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" Online Account Access \"\>", 
           ",", "\<\" Registration Forms \"\>", 
           ",", "\<\" Play It Forward \"\>", 
           ",", "\<\" Signature Series Disc \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" USAU Merchandise \"\>", 
           ",", "\<\" Licensed Merchandise \"\>", 
           ",", "\<\" Approved Discs \"\>", ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" Men \"\>", ",", "\<\" Women \"\>", 
             ",", "\<\" Kids \"\>", ",", "\<\" T-Shirts \"\>", 
             ",", "\<\" Sweats \"\>", ",", "\<\" Accessories \"\>"}], "}"}]}],
           "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" Spirit of Coaching \"\>", 
           ",", "\<\" Spirit Awards \"\>", 
           ",", "\<\" Spirit Captain Role \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" 11th Edition Rules \"\>", 
           ",", "\<\" Observer Contacts \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" Rules of Ultimate \"\>", 
           ",", "\<\" Where to Play \"\>", 
           ",", "\<\" Sanctioned Event Registration \"\>", 
           ",", "\<\" Athlete Protection \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" Coaching Requirements \"\>", 
           ",", "\<\" Register for a workshop \"\>", 
           ",", "\<\" Become a USA Ultimate Coach Member \"\>", 
           ",", "\<\" Athlete Protection \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\" Event Calendar \"\>", 
           ",", "\<\" History / Event Archives \"\>", 
           ",", "\<\" Parent Resources \"\>", 
           ",", "\<\" Athlete Protection \"\>"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\" Bid to Host USA Ultimate Events \"\>", 
             ",", "\<\" Tournament Director's Certification Program \"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            
            RowBox[{"\<\" League Competition \"\>", 
             ",", "\<\" Tournament Competition \"\>", 
             ",", "\<\" Other Development (Practices, Clinics, etc) \"\>"}], 
            "}"}], ",", "\<\" Insurance \"\>", 
           ",", "\<\" Become a Chaperone \"\>", 
           ",", "\<\" Athlete Protection \"\>"}], "}"}]}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\" About these archives: a message from USA Ultimate \
\"\>", ",", "\<\" \"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\<\" \"\>", ",", "\<\" 2015 \"\>"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                
                RowBox[{"\<\"2010s\"\>", ",", "\<\"|\"\>", ",", "10", ",", 
                 "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", 
                 ",", "17"}], "}"}], ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"2000s\"\>", ",", "\<\"|\"\>", ",", "0", ",", "1",
                  ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
                 ",", "8", ",", "9"}], "}"}], ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"1990s\"\>", ",", "\<\"|\"\>", ",", "90", ",", 
                 "91", ",", "92", ",", "93", ",", "94", ",", "95", ",", "96", 
                 ",", "97", ",", "98", ",", "99"}], "}"}], ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"1980s\"\>", ",", "\<\"|\"\>", ",", "80", ",", 
                 "81", ",", "82", ",", "83", ",", "84", ",", "85", ",", "86", 
                 ",", "87", ",", "88", ",", "89"}], "}"}], ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"1970s\"\>", ",", "\<\"|\"\>", 
                 ",", "\<\"<79 \"\>", ",", "79"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"\<\"Competition Divisions\"\>", ",", 
               RowBox[{"{", 
                
                RowBox[{"\<\"Youth\"\>", ",", "\<\"College\"\>", 
                 ",", "\<\"Club\"\>", ",", "\<\"Masters\"\>", 
                 ",", "\<\"Beach\"\>"}], "}"}]}], "}"}]}], "}"}]}], "}"}], 
         ",", "\<\" About This page serves as a placeholder page for general \
content and information related to the organization in 2015. Current year \
information will be archived here starting at the end of the year. For \
information related to competition this year, follow the division links in \
the gray navigation box at the top right. \"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          
          RowBox[{"\<\"Event\"\>", ",", "\<\"Location\"\>", 
           ",", "\<\"Division\"\>", ",", "\<\"Finish\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Open\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Mixed\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Women's\"\>", ",", "\<\"2nd\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Mixed Masters\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Open Masters\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Women's Masters\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WCBU\"\>", ",", "\<\"Dubai, UAE\"\>", 
           ",", "\<\"Grandmasters\"\>", ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WU23UC\"\>", 
           ",", "\<\"London, United Kingdom\"\>", ",", "\<\"U-23 Girls\"\>", 
           ",", "\<\"2nd\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WU23UC\"\>", 
           ",", "\<\"London, United Kingdom\"\>", ",", "\<\"U-23 Mixed\"\>", 
           ",", "\<\"1st\"\>"}], "}"}], ",", 
         RowBox[{"{", 
          
          RowBox[{"\<\"2015 WU23UC\"\>", 
           ",", "\<\"London, United Kingdom\"\>", ",", "\<\"U-23 Open\"\>", 
           ",", "\<\"1st\"\>"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"Timeline\"\>", ",", "\<\" \"\>"}], "}"}]}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Privacy Policy\"\>", ",", "\<\"Site Map\"\>", 
     ",", "\<\"Contact Us\"\>", ",", "\<\"Mobile\"\>", ",", "\<\"RSS\"\>"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7072180777697678`*^9},ExpressionUUID->"104dbf08-9107-4930-a290-\
9711bcaca7aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "\"\<http://www.usaultimate.org/archives/2015.aspx\>\"", ",", 
   "\"\<Hyperlinks\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7072180864892607`*^9, 
  3.7072181054134293`*^9}},ExpressionUUID->"af4003cd-ac99-4e7a-8b24-\
492af14993cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"http://www.usaultimate.org/archives//\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives//\"\>", 
   ",", "\<\"http://www.facebook.com/pages/USA-Ultimate/119701558067872\"\>", 
   ",", "\<\"http://twitter.com/USAUltimate\"\>", 
   ",", "\<\"https://plus.google.com/u/0/106652851630933181480/posts\"\>", 
   ",", "\<\"http://www.youtube.com/usaultimate\"\>", 
   ",", "\<\"http://play.usaultimate.org/members/login/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/\"\>", 
   ",", "\<\"http://www.usaultimate.org/2017visiontour/\"\>", 
   ",", "\<\"http://www.usaultimate.org/contact_us/\"\>", 
   ",", "\<\"http://www.usaultimate.org/hqstaff/\"\>", 
   ",", "\<\"http://www.usaultimate.org/youth-contacts/\"\>", 
   ",", "\<\"http://www.usaultimate.org/collegecontacts/\"\>", 
   ",", "\<\"http://www.usaultimate.org/clubcontacts/\"\>", 
   ",", "\<\"http://www.usaultimate.org/masterscontacts/\"\>", 
   ",", "\<\"http://www.usaultimate.org/beachcontacts/\"\>", 
   ",", "\<\"http://www.usaultimate.org/CurrentAffiliates/\"\>", 
   ",", "\<\"http://www.usaultimate.org/contactstateorgs/\"\>", 
   ",", "\<\"http://www.usaultimate.org/board/\"\>", 
   ",", "\<\"http://www.usaultimate.org/local/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/\"\>", 
   ",", "\<\"http://www.usaultimate.org/spirit/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about_us/\"\>", 
   ",", "\<\"http://www.usaultimate.org/annual_report/\"\>", 
   ",", "\<\"http://www.usaultimate.org/jobs/\"\>", 
   ",", "\<\"http://www.usaultimate.org/equity/\"\>", 
   ",", "\<\"http://www.usaultimate.org/governance/\"\>", 
   ",", "\<\"http://www.usaultimate.org/bylaws/\"\>", 
   ",", "\<\"http://www.usaultimate.org/strategic_plan/\"\>", 
   ",", "\<\"http://www.usaultimate.org/hall_of_fame/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/\"\>", 
   ",", "\<\"http://www.usaultimate.org/sponsorship/\"\>", 
   ",", "\<\"http://www.usaultimate.org/faq/\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx\"\>", 
   ",", "\<\"https://itunes.apple.com/us/app/usa-ultimate/id1032772331?mt=8\"\
\>", ",", \
"\<\"https://play.google.com/store/apps/details?id=org.usaultimate.\
usaultimate&hl=en\"\>", ",", "\<\"http://www.usaultimate.org/magazine/\"\>", 
   ",", "\<\"http://www.usaultimate.org/multimedia/usa_ultimate_magazine/usa_\
ultimate_magazine_2016_spring.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/magazine/2015_summer/\"\>", 
   ",", "\<\"http://www.usaultimate.org/multimedia/usa_ultimate_magazine/usa_\
ultimate_magazine_2015_fall.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/multimedia/usa_ultimate_magazine/usa_\
ultimate_magazine_2015_winter.aspx\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/rankings/\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/team_rankings/?RankSet=\
College-Men\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/team_rankings/?RankSet=\
College-Women\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/team_rankings/?RankSet=\
Club-Men\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/team_rankings/?RankSet=\
Club-Mixed\"\>", 
   ",", "\<\"http://play.usaultimate.org/teams/events/team_rankings/?RankSet=\
Club-Women\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=18\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=5\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=6\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=19\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=7\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/default.aspx?CategoryId=10\"\>", 
   ",", "\<\"http://www.youtube.com/user/usaultimate\"\>", 
   ",", "\<\"http://play.usaultimate.org/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/tournament/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/league/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2016.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2014.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2013.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2012.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2011.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2010.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2009.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2008.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2007.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2006.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2005.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2004.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2003.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2002.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2001.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2000.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1999.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1998.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1997.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1996.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1995.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1994.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1993.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1992.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1991.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1990.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1989.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1988.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1987.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1986.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1985.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1984.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1983.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1982.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1981.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1980.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/1979.aspx\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/2017-USA-Ultimate-Beach-\
Championships/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/2017-USA-Ultimate-Beach-\
Westerns/\"\>", 
   ",", "\<\"http://www.usaultimate.org/youth/default.aspx#season_hs\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/US-Open-and-Youth-Club-\
Championships-2017/\"\>", 
   ",", "\<\"http://www.collegechampionships.usaultimate.org\"\>", 
   ",", "\<\"http://collegechampionships.usaultimate.org\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/US-Open-and-Youth-Club-\
Championships-2017/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/TCT-Elite-Select-Challenge-\
2017/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/TCT-Pro-Elite-Challenge-2017/\
\"\>", ",", \
"\<\"http://play.usaultimate.org/events/TCT-Select-Flight-Invite-2017/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/TCT-Pro-Flight-Finale-2017/\"\
\>", ",", \
"\<\"http://play.usaultimate.org/events/USA-Ultimate-National-Championships-\
2016/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/2017-USA-Ultimate-Masters-\
Championships/\"\>", ",", "\<\"http://www.usaultimate.org/youth/\"\>", 
   ",", "\<\"http://www.usaultimate.org/youth_guidelines/\"\>", 
   ",", "\<\"http://www.usaultimate.org/college/\"\>", 
   ",", "\<\"http://www.usaultimate.org/college_eligibility/\"\>", 
   ",", "\<\"http://www.usaultimate.org/college_guidelines/\"\>", 
   ",", "\<\"http://www.usaultimate.org/college_development/\"\>", 
   ",", "\<\"http://www.usaultimate.org/club/\"\>", 
   ",", "\<\"http://www.usaultimate.org/tct_guidelines/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/US-Open-and-Youth-Club-\
Championships-2017/\"\>", ",", "\<\"http://www.usaultimate.org/masters/\"\>", 
   ",", "\<\"http://www.usaultimate.org/masters_guidelines/\"\>", 
   ",", "\<\"http://www.usaultimate.org/beach/\"\>", 
   ",", "\<\"http://www.usaultimate.org/beach_guidelines/\"\>", 
   ",", "\<\"http://www.usaultimate.org/national_teams/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wjuc_\
2016.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wugc_\
2016.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2017.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/world_\
games_2017.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wu24_\
2017.aspx\"\>", ",", "\<\"http://www.usaultimate.org/affiliates/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about_affiliation/\"\>", 
   ",", "\<\"http://www.usaultimate.org/affiliateprograms/\"\>", 
   ",", "\<\"http://www.usaultimate.org/CurrentAffiliates/\"\>", 
   ",", "\<\"http://www.usaultimate.org/document_resources/\"\>", 
   ",", "\<\"http://www.usaultimate.org/affiliate_events/\"\>", 
   ",", "\<\"http://www.usaultimate.org/affiliatefaq/\"\>", 
   ",", "\<\"http://www.usaultimate.org/camp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/chaperones/\"\>", 
   ",", "\<\"http://www.usaultimate.org/youth_requirements/\"\>", 
   ",", "\<\"http://www.usaultimate.org/coaching/\"\>", 
   ",", "\<\"http://www.usaultimate.org/cdp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/protection/\"\>", 
   ",", "\<\"http://www.usaultimate.org/sanctioning/\"\>", 
   ",", "\<\"http://www.usaultimate.org/leagues/\"\>", 
   ",", "\<\"http://www.usaultimate.org/tournaments/\"\>", 
   ",", "\<\"http://www.usaultimate.org/insurance_program/\"\>", 
   ",", "\<\"http://gum.usaultimate.org\"\>", 
   ",", "\<\"http://www.usaultimate.org/learntoplay/\"\>", 
   ",", "\<\"http://www.usaultimate.org/conventions/\"\>", 
   ",", "\<\"http://www.usaultimate.org/grants/\"\>", 
   ",", "\<\"http://www.usaultimate.org/organizers/\"\>", 
   ",", "\<\"http://www.usaultimate.org/resources/champ_events/default.aspx\"\
\>", ",", "\<\"http://www.usaultimate.org/tdcp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/youtheducation/\"\>", 
   ",", "\<\"http://www.usaultimate.org/college_development/\"\>", 
   ",", "\<\"http://www.usaultimate.org/develop_locally/\"\>", 
   ",", "\<\"http://www.usaultimate.org/womens_development/\"\>", 
   ",", "\<\"http://www.usaultimate.org/parents/\"\>", 
   ",", "\<\"http://www.usaultimate.org/officiating/\"\>", 
   ",", "\<\"http://www.usaultimate.org/rules/\"\>", 
   ",", "\<\"http://www.usaultimate.org/ocp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/discstandards/\"\>", 
   ",", "\<\"http://www.usaultimate.org/stateorgs/\"\>", 
   ",", "\<\"http://www.usaultimate.org/stateorgreqs/\"\>", 
   ",", "\<\"http://www.usaultimate.org/stateorgfaq/\"\>", 
   ",", "\<\"http://www.usaultimate.org/contactstateorgs/\"\>", 
   ",", "\<\"http://www.usaultimate.org/memberships/\"\>", 
   ",", "\<\"http://play.usaultimate.org/members/login/\"\>", 
   ",", "\<\"http://www.usaultimate.org/membership/default.aspx#Registration_\
Forms\"\>", ",", "\<\"http://www.usaultimate.org/playitforward/\"\>", 
   ",", "\<\"http://www.usaultimate.org/SignatureSeries/\"\>", 
   ",", "\<\"http://www.usaultimate.org/merchandise/\"\>", 
   ",", "\<\"http://www.usaultimate.org/merchandise/\"\>", 
   ",", "\<\"http://www.usaultimate.org/shop/additional_merchandise.aspx\"\>",
    ",", "\<\"http://www.usaultimate.org/discstandards/\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/Mens\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/Ladies\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/Kids\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/T-Shirts\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/Sweatshirts_And_Fleece\"\>", 
   ",", "\<\"http://usaultimate.teamfanshop.com/Accessories\"\>", 
   ",", "\<\"http://www.usaultimate.org/spirit/\"\>", 
   ",", "\<\"http://www.usaultimate.org/coachingspirit/\"\>", 
   ",", "\<\"http://www.usaultimate.org/spiritawards/\"\>", 
   ",", "\<\"http://www.usaultimate.org/assets/1/Page/Spirit%20Captain%20Role.\
pdf\"\>", ",", "\<\"http://www.usaultimate.org/rules/\"\>", 
   ",", "\<\"http://www.usaultimate.org/resources/officiating/rules/11th_\
edition_rules.aspx\"\>", ",", "\<\"http://www.usaultimate.org/ocp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/contact_us/other.aspx#observers\
\"\>", ",", "\<\"http://www.usaultimate.org/events/event.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/rules/\"\>", 
   ",", "\<\"http://www.usaultimate.org/local/\"\>", 
   ",", "\<\"http://www.usaultimate.org/sanctioned_events/\"\>", 
   ",", "\<\"http://www.usaultimate.org/protection/\"\>", 
   ",", "\<\"http://www.usaultimate.org/coaching/\"\>", 
   ",", "\<\"http://www.usaultimate.org/resources/coaching/usa_ultimate_\
coaching_requirements.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/cdp/\"\>", 
   ",", "\<\"http://play.usaultimate.org/events/tournament/?ViewAll=false&\
IsLeagueType=false&IsClinic=true&FilterByCategory=AE&ClinicTypeId=1\"\>", 
   ",", "\<\"http://www.usaultimate.org/memberships/\"\>", 
   ",", "\<\"http://www.usaultimate.org/protection/\"\>", 
   ",", "\<\"http://play.usaultimate.org/\"\>", 
   ",", "\<\"http://play.usaultimate.org/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/\"\>", 
   ",", "\<\"http://www.usaultimate.org/parents/\"\>", 
   ",", "\<\"http://www.usaultimate.org/protection/\"\>", 
   ",", "\<\"http://www.usaultimate.org/organizers/\"\>", 
   ",", "\<\"http://www.usaultimate.org/organizers/\"\>", 
   ",", "\<\"http://www.usaultimate.org/resources/champ_events/default.aspx\"\
\>", ",", "\<\"http://www.usaultimate.org/tdcp/\"\>", 
   ",", "\<\"http://www.usaultimate.org/sanctioning/\"\>", 
   ",", "\<\"http://www.usaultimate.org/leagues/\"\>", 
   ",", "\<\"http://www.usaultimate.org/tournaments/\"\>", 
   ",", "\<\"http://www.usaultimate.org/insurance_program/\"\>", 
   ",", "\<\"http://www.usaultimate.org/insurance/\"\>", 
   ",", "\<\"http://www.usaultimate.org/chaperones/\"\>", 
   ",", "\<\"http://www.usaultimate.org/protection/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives//\"\>", 
   ",", "\<\"http://usaultimate.org/archives/default.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/assets/1/Page/USAUltimateLogo_500x500.\
jpg\"\>", 
   ",", "\<\"http://www.usaultimate.org/news/about-the-archives-a-message-\
from-usa-ultimate/\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2014.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2016.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2010.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2011.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2012.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2013.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2014.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2016.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2017.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2000.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2001.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2002.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2003.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2004.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2005.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2006.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2007.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2008.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2009.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1990.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1991.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1992.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1993.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1994.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1995.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1996.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1997.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1998.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1999.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1980.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1981.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1982.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1983.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1984.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1985.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1986.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1987.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1988.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1989.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/pre1979.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/1979.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015_youth.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015_college.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015_club.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015_masters.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/archives/2015_beach.aspx\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2014.aspx#about\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2016.aspx#about\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2014.aspx#international\"\>", 
   ",", "\<\"http://usaultimate.org/archives/2016.aspx#international\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wcbu_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wu23_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wu23_\
2015.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/usaultimate/international/wu23_\
2015.aspx\"\>", ",", "\<\"mailto:archives@usaultimate.org\"\>", 
   ",", "\<\"http://www.usaultimate.org/privacy_policy.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/site_map.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/about/contact_us/\"\>", 
   ",", "\<\"http://www.usaultimate.org/mobile/default.aspx\"\>", 
   ",", "\<\"http://www.usaultimate.org/rss.aspx\"\>", 
   ",", "\<\"http://www.americaneagle.com\"\>", 
   ",", "\<\"http://www.usaultimate.org/\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7072181077576323`*^9},ExpressionUUID->"1ff680c9-ce5c-47a8-9eda-\
3658324f54ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\<http://www.usaultimate.org/about/usaultimate/international/wcbu_2015.\
aspx\>\"", ",", "\"\<Data\>\""}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707218164122718*^9, 3.707218172101215*^9}, {
  3.7072182712438507`*^9, 3.707218275976845*^9}, {3.7072183460273037`*^9, 
  3.707218356945885*^9}},ExpressionUUID->"de86e309-6715-47ee-ac52-\
4348496ed28e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.7072183614705505`*^9, 
  3.707218419156502*^9}},ExpressionUUID->"ede1b712-5f29-436f-a262-\
6b91749fb6d6"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Name \"\>", "\<\"City, ST\"\>", "\<\"Current/Most Recent Team\"\>"},
    {"\<\"Adam Raty\"\>", "\<\"San Mateo, CA\"\>", "\<\"Polar Bears\"\>"},
    {"\<\"An-Chi Tsou\"\>", "\<\"Berkeley, CA\"\>", "\<\"Polar Bears\"\>"},
    {"\<\"Bob Liu\"\>", "\<\"Ames, IA\"\>", "\<\"Machine\"\>"},
    {"\<\"Byron Liu\"\>", "\<\"Atlanta, GA\"\>", "\<\"Chain Lightning\"\>"},
    {"\<\"Claire Desmond\"\>", "\<\"San Francisco, CA\"\>", "\<\"Fury\"\>"},
    {"\<\"Eli Friedman\"\>", "\<\"Portland, OR\"\>", "\<\"Rhino\"\>"},
    {"\<\"Greg Marliave\"\>", "\<\"Berkeley, CA\"\>", "\<\"Polar Bears\"\>"},
    {"\<\"Jenny Fey\"\>", "\<\"Arlington, VA\"\>", "\<\"Ant Madness\"\>"},
    {"\<\"Kevin Cocks\"\>", "\<\"Sacramento, CA\"\>", "\<\"Polar Bears\"\>"},
    {"\<\"Kiran Thomas\"\>", "\<\"Austin, TX\"\>", "\<\"Doublewide*\"\>"},
    {"\<\"Markham Shofner\"\>", "\<\"Washington, DC\"\>", "\<\"Truck \
Stop\"\>"},
    {"\<\"Natasha Won\"\>", "\<\"Pleasanton, CA\"\>", "\<\"Polar Bears\"\>"},
    {"\<\"Nicky Spiva\"\>", "\<\"New Orleans, LA\"\>", "\<\"Chain Lightning\"\
\>"},
    {"\<\"Raha Mozaffari\"\>", "\<\"Philadelphia, PA\"\>", "\<\"AMP\"\>"},
    {"\<\"Samantha McClellan\"\>", "\<\"Washington DC\"\>", "\<\"Scandal\"\>"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7072183650565434`*^9, 
  3.7072184194849834`*^9}},ExpressionUUID->"0e7fd40a-5c32-4820-81ea-\
a564f88a74a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset", "=", 
  RowBox[{"Dataset", "[", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Association", "[", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"data", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2", ",", "3", ",", "1"}], "]"}], "]"}], 
         "\[Rule]", "#"}], "]"}], "]"}], "&"}], ",", 
     RowBox[{"data", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2", ",", "3", ",", 
        RowBox[{"2", ";;", 
         RowBox[{"Length", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2", ",", "3"}], "]"}], "]"}], "]"}]}]}], "]"}],
       "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7072187579923744`*^9, 3.707218758319949*^9}, {
  3.707218852739946*^9, 3.7072189417680535`*^9}, {3.7072190280521374`*^9, 
  3.707219079848896*^9}, {3.7072191346654906`*^9, 
  3.7072191687403564`*^9}},ExpressionUUID->"50c8903a-7274-4348-b25c-\
1ed4c4f2f847"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 15, "Length" -> 15, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name ", "City, ST", "Current/Most Recent Team"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 15], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Name "} -> 1, {All, "City, ST"} -> 
           1, {All, "Current/Most Recent Team"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Name " -> TypeSystem`PackageScope`AtomShape[
               134.40000000000003`], "City, ST" -> 
              TypeSystem`PackageScope`AtomShape[163.20000000000002`], 
              "Current/Most Recent Team" -> 
              TypeSystem`PackageScope`AtomShape[144.00000000000003`]]]], 
           15, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[631264429], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name ", "City, ST", "Current/Most Recent Team"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String]}], 15], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[631264429]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Name \"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Name \"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743650871][{
                    All, "Name "}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[All, "Name "]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"City, ST\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"City, ST\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743650871][{
                    All, "City, ST"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[All, "City, ST"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Current/Most Recent Team\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Current/Most Recent Team\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743650871][{
                    All, "Current/Most Recent Team"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[All, "Current/Most Recent Team"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Adam Raty", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[1, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["San Mateo, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[1, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[1, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["An-Chi Tsou", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[2, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Berkeley, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[2, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[2, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Bob Liu", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[3, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ames, IA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[3, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Machine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[3, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Byron Liu", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[4, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Atlanta, GA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[4, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chain Lightning", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[4, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Claire Desmond", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[5, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["San Francisco, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[5, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fury", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[5, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Eli Friedman", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[6, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Portland, OR", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[6, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rhino", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[6, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Greg Marliave", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[7, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Berkeley, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[7, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[7, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Jenny Fey", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[8, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Arlington, VA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[8, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ant Madness", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[8, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Kevin Cocks", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[9, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Sacramento, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[9, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[9, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Kiran Thomas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[10, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Austin, TX", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[10, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Doublewide*", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[10, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Markham Shofner", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[11, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Washington, DC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[11, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Truck Stop", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[11, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Natasha Won", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[12, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Pleasanton, CA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[12, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[12, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Nicky Spiva", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[13, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["New Orleans, LA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[13, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chain Lightning", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[13, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Raha Mozaffari", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[14, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Philadelphia, PA", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[14, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["AMP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[14, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Samantha McClellan", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[15, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Washington DC", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[15, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Scandal", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
                  GeneralUtilities`Slice[15, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743650871][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 743650871]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[743650871][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {495., {205., 211.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{
  3.7072187587520313`*^9, 3.707218897475588*^9, 3.707218942297837*^9, {
   3.7072191537891397`*^9, 
   3.707219180428706*^9}},ExpressionUUID->"c0739398-6092-401e-bd86-\
88b3300d50b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataset2", "=", 
  RowBox[{"dataset", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"Interpreter", "[", "\"\<City\>\"", "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7072193834359503`*^9, 3.7072193859500403`*^9}, {
  3.707219600703796*^9, 3.7072196334463816`*^9}, {3.7072196825970535`*^9, 
  3.707219699731019*^9}},ExpressionUUID->"2b5bf95a-06bd-4a41-9025-\
1a40681b05c1"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 15, "Length" -> 15, "InitialType" -> TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name ", "City, ST", "Current/Most Recent Team"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Entity["City"]], 
            TypeSystem`Atom[String]}], 15], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          
          Association[{All, "Name "} -> 1, {All, "City, ST"} -> 
           1, {All, "Current/Most Recent Team"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Name " -> TypeSystem`PackageScope`AtomShape[
               134.40000000000003`], "City, ST" -> 
              TypeSystem`PackageScope`AtomShape[90], 
              "Current/Most Recent Team" -> 
              TypeSystem`PackageScope`AtomShape[144.00000000000003`]]]], 
           15, {}]], "InitialData" -> 
        TypeSystem`PackageScope`CacheHandle[85691351], "Type" -> 
        TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "Name ", "City, ST", "Current/Most Recent Team"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[
             Entity["City"]], 
            TypeSystem`Atom[String]}], 15], "HandleQ" -> True, "RowTarget" -> 
        20, "Data" -> TypeSystem`PackageScope`CacheHandle[85691351]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Name \"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Name \"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1697360109][{All, "Name "}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[All, "Name "]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"City, ST\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"City, ST\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1697360109][{All, "City, ST"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[All, "City, ST"]], "Mouse"], 
                Background -> GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Current/Most Recent Team\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Current/Most Recent Team\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1697360109][{All, "Current/Most Recent Team"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[All, "Current/Most Recent Team"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Adam Raty", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[1, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"San Mateo\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[1, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[1, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["An-Chi Tsou", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[2, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Berkeley\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[2, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[2, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Bob Liu", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[3, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Ames\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[3, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Machine", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[3, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Byron Liu", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[4, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Atlanta\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[4, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chain Lightning", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[4, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Claire Desmond", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[5, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"San Francisco\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[5, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Fury", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[5, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Eli Friedman", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[6, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Portland\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[6, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Rhino", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[6, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Greg Marliave", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[7, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Berkeley\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[7, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[7, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Jenny Fey", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[8, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Arlington\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[8, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Ant Madness", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[8, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Kevin Cocks", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[9, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Sacramento\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[9, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[9, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Kiran Thomas", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[10, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Austin\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[10, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Doublewide*", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[10, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Markham Shofner", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[11, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Washington\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[11, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Truck Stop", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[11, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Natasha Won", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[12, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Pleasanton\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[12, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Polar Bears", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[12, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Nicky Spiva", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[13, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"New Orleans\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[13, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Chain Lightning", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[13, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Raha Mozaffari", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[14, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Philadelphia\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[14, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["AMP", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[14, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Pane[
                Annotation["Samantha McClellan", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[15, 
                   Key["Name "]]], "Mouse"], 
                ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox["\"Washington\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[15, 
                   Key["City, ST"]]], "Mouse"], 
                ImageSize -> {{90, Full}, Automatic}, 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation["Scandal", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
                  GeneralUtilities`Slice[15, 
                   Key["Current/Most Recent Team"]]], "Mouse"], 
                ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1697360109][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1697360109]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1697360109][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {421., {205., 211.}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{3.707219645469926*^9, 
  3.707219708999929*^9},ExpressionUUID->"77dfe037-9574-4fdc-bc89-\
d7864e4e4f34"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeoListPlot", "[", 
  RowBox[{"dataset2", "[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.707219728940304*^9, 
  3.7072197919219923`*^9}},ExpressionUUID->"23bfc396-6ac6-4e91-9ce0-\
37fa8f495b6a"],

Cell[BoxData[
 GraphicsBox[{{
    {Texture[
      FormBox[
       GraphicsBox[
        TagBox[
         RasterBox[CompressedData["
1:eJzsvVtvHNmaptc+XPjSf8H/wre+9I0vxvAPmIHbA9+0gR4DhmHMwG20Gwa6
L2bG3Xt2dR16V0nau1pF7V2ixCqRlKrFk4pHbfG4eUiyxCSp0rGmyCJlbkFA
OJ8V8UZ+sXJFZGQyyaRUEcDHSMZhxYoVK9Z64/1O/9W/+F/+2f/0n/7Jn/zJ
v/ovGn/+2T//3/6bP//zf/6///f/ZeOf/+HP/tX//C//7E//x//2z/7XP/2X
f/rn//W/+M8aG/+7/+RP/uTfNY7/zxu///h6P0LenO5HJ8fxGmEb/7/6sbne
fRZvPzyKj9l/vh8dmWPY9va0WZ4tyxfOs9ezx7Fdv1XeW1P22v5+NFPLXs8/
LiTaf5Jc++Bl8bFTm/Fxz35onvf2tNlW3L/qfnIS76Mt8uqkY0LXoqyiun8y
VY/+pFqqpVqqpVqq5T1fNOe9lzK5E30ythF9NDLr1h/fX8uI3Y98OlmLbi/u
OWwxslJ3eGFxt4FPtm9GG0/movtbN5zc27zeIl/M192xi4/r0dXpuisHPCNc
8upwI9p8OuXKCp2/uH+vEJcID1lcaPGk8JxwFNs3Dvaj46NWvMn5Opc192ux
pLCSPdb+tttUL1+aeGrXiep2eFSMO/Nk52n+PtWfcsHOKlPX4X9hanvfbLdt
yW/7f7s65eFHK/1+v6ulWqqlWqqlWnq9tJv73nX51YNYCo8br8XY8pvldNvI
Si1tk4NXi9GDndsO4+Vhx3ubA249uVVLsRMYbvNgr4XnQrafzQRxJNcpgyGF
e7S2uEj4TBjS4jvLU1oOUdstxgxhwbeB/aG6+dsHH9UdhryxUHfXEd7TNX2+
MO/ewcN+2SlneNx6vq7h37PfjsL58I5HxweZdugFhqzwZLVUS7VUS7W8D0u3
c9+7JKWwY0AcL8nvBqZc3ltJMcTC7nAbDBnjyImt5QymWdvfdVzkWw/bTNWX
o/HaaDT5eC4pc6A0F+nrmE+Os/jJ59ks/whWOjpu7rfY1nJ2Pn70r6ltvi7c
7rfb761luUiL4aiT5VBD2LSdnHj3BGa0+mxd07ZP2n6Jvpp1iF9VOb3AjxWW
rJZqqZZqqZZ3cen1HHgZpVvsmEoDOzpesvEbnfbR8bZrE3AdWC9PB43c3bgZ
bR5sOcwBhpnb3ovG1ps8mNp35vFQNPPkSSqz+7UMhqy/mHc673bPSTpXbATF
o1kcaO0XuT7HShfsYyodx2/KQoSlxP35mPH4qBVnhnhPi1NV5uuT3Qyn+dY7
r929W4yI6F4R+9u3G3XbT7J2jtuNNhlbrzuu9NpM3em7sUcYXqm7tvXrw75e
vj/9HheqpVqqpVqqpVryll7q4S6rnBk7+jgy+X19biv68WjTtYvWwpQWP4Iv
x2tfOoy0Uo+xEvwj9pFWpyzhWIsjv6ndSLlMyip6Pku/v5/BkbIvFIYEX8lv
RvgNXxN8WmpPmnpdayfoY0iwJlgJXxi2g6WOzPFsO04wrK5jfXTEefqco8W5
lqu02LCM/tgv22Jn6m2xqPTlPreIiBu18qsH2d+fTdfdOWDp8353+j1WVEu1
VEu1VEu1tJvr8nxKj4/ePRzZU/yYSKrTRsZrjpOsv9hK2ynmDQccFrT6bThE
MCS4RRjyNOHcLJZyfKTBkFZPThlFz25yciRTlsV/wlXiEfkfPAj+G3xkuDjP
v9qWEbIhBENantHaXFrfHHufwm4+NrS+L77N5lFAl+3bWIbsNC0WttjZ5zj1
G2xosWJZWW0822cv6+f+/dXv8aNaqqVaqqVafn5LWa6xHdfTb1zYL+yYiyPx
3W5gyWevlp2eGZxnsSO8JHputSt+GbKDfP6qiT1fGzzJ+eDHufpcWs7KwViG
7wzi//py6jtjdcxWX2xxom/H6McE8m0QhRmF73ze0tcVW3tGleP7fNs+J12/
rge/d+Txkr6tph9PyLf71LG6ro+RraCv7hQ7+nKR70y/x5RqqZZqqZZqeX+X
srjRF/n1vms48ryxY0bQa0u33cCR8JH4WquNwHwhHxh8uS1v2cRDdYcV8ct+
8eNqNFYbymBRcGi757a0MtPAQvUMHrR2hxazWZzl4y+L10I+Kda+0C/HYkMf
q2qb75tiuUC77fPZuvPXfuuVe3wU9t/xddgWO2o9tFh35TrbS3NO3K/Phh+t
vhs+/95qPXp2sNxd/6qwZLVUS7VUS7X0YekWO5aVfmPFvmJHTywnia+MxYqh
tgNXoue2uAmR7wznnRzvOD7T2lXO7a1EC0+fFD6Xrc256PCwnmIrG9dRGMvn
IUM8nh8T0ddty67S6pBDuDQk1jbSYtaQv4yOv7dWjxZ39oLX833MtR17TeFC
+Eywo3hG1nF/2XV+Mgs7vcGPLQJHfcH9sd9jT7VUS7VUS7W8e0s3WLDIzzXk
Ywq3Mrex2Ze58bJhx1SS2OTud2IfWdTmMTYcCD4DuEbwI9vWn0xmMCSxftBv
F+HIyfFb0dzsSDT+YDzVa9v4jr6dovKzCG9yjGJt+/hOGM3aO/qcYgiH2vu0
vKZv7xi6H587tceGdNrCjHCXMSfYxIr9k/70y36PR9VSLdVSLdVy+Ze33lza
ieTla8ubz/vJr1w67BjAkor9w9o+j6LY2CHB5hCuEuyITls4cuZgN9p+dZB7
3osXm9Ha+ny0uTaR6pn9/C9WN62YkJaH9OPwWGwY+u1jSNsXfR8WX69ubS1D
fjBvzfWJsYMPkO8/o3KLbBn7giUvyXdWhSerpVqqpVqqxS4tWLBDjOJjwzwe
Ek4KX9MWX1U3P148x3IpsaMVixsSW0n5z3QqcI5Tewepb7bi+2ArGTr+8OVm
ihHH7n4RxGryg7ExI619I9jV8oe+LaTFj77Pt8WPvl/Lkadn9jGirpWHKYVH
iT8Uup5wYntbxfPHkrwn6Mavjq/2rR86XjzJseT3yX6PXdVSLdVSLdVy8Uu3
GLFI5Dvj40i2Y0NWNFde5Bx56bGjEeXell6bGD6dP5d6Jr4Peuwi35q5ycFo
fOTXMRY73IlGR25ksKDFW2Axvg2EHYXf5BNt9dD63+qywXGc7/trW99vyxPm
+UmHeE7/2ybEh4JzxW+WwY7+fvWlbuL3lJVrD+K8ln3pg/L1SsThSbOmf8r2
ot9jWrVUS7VUS7Wc33IeuNGfo908n+RyAzfG/gbt50li1FTYsWAeZz25k2Kj
kZX2WNLyyYdHNYcfH9S3ovHN2YxtJPufHyy5+JJri/cchtR5S/Mj0crSeAvG
k97ZcpAW//l5o61PjXCctYO0uM7PsQ3OszjS8pX23Lc5a98Hx14H/5pyfGDs
041MbsZtT3xO1ooJjt80ZX/5MN5PPhq1z/3GdVb3u4wX2Uc9dibulN8ffWnU
k/vu9zhXLdVSLdVSLb1bzhszag4HB8qejfxtnejrkIml8+Ei31nsGJrLx2Mu
sht7VZcz5dVyJt/hnZlr0VIDIxJbcntjOjo52o42V8cz583Oj6ecZIgHFF5V
P4BXFL5TnkC/vn78cWtb6Ytvd2nPsf3Rcoy+/3cIf4a4cfrJ/E7d2V4odk+7
96DT94a14gy1fT+cTezF23lIHA8+FefjlBS9ZyMrtRj3v1p00u+xr1qqpVqq
pVo6X86CDYvsIf252uGBk2bcF+ZcMERXervx/Pnp54od83Akaxs/0pcne0vR
0vxwEOsIP+KrDYZEtM/GHbe6aXLWgCEPX222cHzWplD9QLG8fb10CCv61/Ix
ZCg/jb2+7Y9+vJ9Qv2Vt+x2cLnw528V5qr6W/3x7mv0/lFvSx5T+fr8sOMv2
scj72+dcv0tiljoMCS+a/K813zUcf3V62/VLBB992QnQVv0eE6ulWqqlWqol
fzkLr2jnbx9DWrxofzs95ElzDXdTVnd9nnPm+4YdU8EO7Zs4xjTYw9pGfj37
bTQzP+lkcvqu4xP5jW7axzLEGif2OPpr8ON4bdRgy4GWPhFjsrrTaRPvR9ts
XkEfz4V00yEc5e+zfTCEEfMwXRFetGWju4YDTG0NZ1p5xhBetPdjj20XP99v
mzwJvjN95iBtv3N1Sb5dwIxfrX7l2nNiazka356IJrdq6XvHeCAfOuVC9793
+j1WVku1VEu1VEtv9dS+zRj5O2xeDrvfcjGK6dMTH4Iz2H69t9jRiOUisb+b
W5yLrs/OR1Ob9QT71x0HaZ+r5SOtgB/vrvwmjRUZ+2wPRDOPh1qw1NFxHKfy
1eFm8HsiFD/n6LjZV3wMGeLtQr7WIV8aew0fT/qYTfaI6KczfioN7Gg5xzwM
GcLTefxk0fkhnXcGO5+gW/e+v3rMy58VR8qPhndU3x32Xn49s+p4yLX9XYcZ
Fx/X3XfG/vO9lvahrz18+rTCk9VSLdVSLRe89BI3huZea6tmfSMUNzrEyTAH
EnOvJziyA+6l6Rfb+3nz0uLRxKfhyr0FJ9fntgqf6/bGZAuOhJ/8dmwgxozG
Z1uxf4hdnsGDh9sOR47cHYxWFu86XxtktzYTzU4OumNevFhNz7F8tv3m8P2p
Q7pn63sT6p92fx43ifg64s+m69FMLbZDLMKxIf2z5UZDdpih2KjtuMeQZL+l
LgEHaQQO3NlHNuqmPmd9qnafo8uO3xs48jtL+9H9P8Q4ku+dvHu27dTvsbVa
qqVaquV9XM4LN/pieSPFYLa5QJSHxGKFN4H5+ry5yIviHOFV+j13BzHkeGKX
lsQf5xm9PtnNfa7Ee5yaGHT+MuBJfGvIk7j5dMrxkMQen6rHekl03el5cNGH
dYch3XUOd5J5v5kDkbXsJcGVof7hc4ZF+MrnNG05xEr0sZ0tC1/pUK5Bvm/y
eEeLHenfwohgYuKro/OvrU86Oe/3D/2v4yIvUUzxDI5MeHD02Q9q9XScQF/N
b+KX2neUfJ1sA0PKTpI+R/53+iBxp1qef9K3+j3mVku1VEu1vMtLKD/geQvz
wOvkN7psmyOZuVU+t3b+BlsueLrCs2PIMAfzc9BXl53LxQkxn/MsiM1zWoAj
mbP1W8cyn6exIhsYEj8bi6t8PjBPf6u+g88N+RFPf9rJ8I8hbs//drF5aCxG
JUYO7wK+L/zvY0Fi7YD9wI6Dj/YzMRz57WNOe31y8Vj8pjogYEbuR2vwJL/B
yXn30Qv5Ynz+0mJImzuJOmIH+fDxvsOKxz8l9Z+vp3Jrad6JbCOX9zad3xb2
uPS5UMz8rL//jjvu7sbNClNWS7VUS7UULJpLZ2r7Tt920fjRYgHGcfgF5TuW
PWQmdl/iT4N060eDfrE535u1N4dW2DEgitOX2EZ286wXdocd7+jHi1Rf9I8v
k8MIrIXvTR5+9GVsfd/pmHn2+AqBCeEN4bbEO6oc8CR4ETwJJuE8jsFXhnPp
I6z1/oQ4TX6DCa9e+evow7//i+j2rQ/dNuXccXHTazPR/uOFTBnwkejtOfc8
MCRluWexMfBO9HX02WobnoW+N+AaeQZw+Njqsg/OkrZlH30IW4lbj7YamHKl
eCxqfEvE8aiuRyPrv3VrMGi/x+pqqZZqqZbLsPhjJvPj9cb3O3Nlt/ivm/MU
y0++NMyjEosbbS47iyc6xY7cn8XJ+BOwBrOyhosZmr5bYcd2kmBt+Jy8Z098
cfGOPk+JTtHiR4shn71qxuPx4zG2E6vTzhPlqOE3eFExy30fnCK8lmfXWCRg
x08/+avoyxt/F/3i7/4PJ/654MdQeeDHZwfL0cvnq27tePiD5VLXLSP4Rg2O
T5yrne+ZRDlrkr7HMyNfJv2qGYupnv4eXV12HCU2BuBIcZbwkXwnnPz0ODgW
2WcqLlLC/9rP//0ew6ulWqqlWi5yyZs/FPM4FG+krOTNv2UEPijGHM24HFaX
6cd6tnrBMvaQ8IvwjsRWycMEEvExfZ8zL7toTh+vFfrWCDuGdMrieSSziV+2
tWFo13csx4e+l76jfC4WFzjfi2exPjrkkx2ymcyL1VOG47QCj2h5RwT8CN59
+mTDxS4CO/K/7D5DMn5vIFqYHnJ2pbNTtxyGnJsfd9hvZH452qpvZdqvk3eQ
c/1nfKmwpHTZDfyIfnl653b63aF7tXF80GPfW4vtJNmu567YP/qGSDGh4dOX
nh2kfl7kV1L/xI6X/fCR8OjjtS8zZfR7fK+WaqmWaunlUnb+gJcBaw0sdIcB
7dx6lvMZ5/08Iz5WCMVWaYchy2Jb+YPDRV6fXOn/vHnZxfBC/vMqEvijFBc1
5mHN0dN769HsQThuT/z/bjQ/c9v9HrpzI3OMtRVE4NRX6/X028N+k4SwYbff
P4X3+WLVcY8WO0rAlOwDP46OXHUY8sH4jWh+9lawX2biozawoyS9/+1Nl/sd
++A7S/WofrCVOb9dXUMY0seSfcWT6muNNXrqwaUGbl6diHFhgu1W9ufSbwbL
e4Ml+U4VToSTfHW4ke6Hq4Sj1P9gx5Xnzx2WxO9rdr+WYkrwI9ejv5IPR9wk
mNKNYY1trPs99ldLtVRLtXSzdDPXwUMyPwyvnG3OPD46G44EQ6Jb5Lcf18ef
T6XnRAeXhx2VK9jnmULiX6NoTq2knmJH5y+b5EEsyl8TbvN6NLV9s8lDNvoh
Ej/7GAOsLt6LPr/+i+ijT/+9E/f7dzcdhrx+/W/dMbem5hyGZC09Nfw03DP7
iRcYf5vs5OJHv48UYco8ftJuQ2cdwo5vzX5iFYmfZI1Ym8dOMKDDlg0crziK
N6fmo/sLj9reA3L4qlxf7yuWhIc0+bLBkV/Mx/pqYkb6sQHkY+3u7yiO/wWG
lK8e/2uc8f1rNl7GPCTHgiWJJ7n5ww/xtgb2BC/iE0bf1TlsF35EiF0lPzEw
Z7/nhWqplmqpltByFsxnx9ihxbOX42L41ro719o/HhkdJpjSxozUdaSbDMVT
kZz1ftAP9h2nXXYx/jU2f42V1wV+22DFsdpvnQhH8nyv3LjqMCO8I7jx7tBn
7vinew8dFmQb8psbn0dXb96KtraX075Mf8H3xeGBA74jinPC+LEX22G4ou8R
9NZ53GOR4A8EBoSLPEuf/fzBRvTp+EakOAM+FiZekrMXnJmPbj5YdNxlN/Eg
+4EliRMp4d6IUUqebL4RuDf6mH2O2Nxaf3fum29OvnXmtrecqJ/kycGPMZ6s
v4h53aPjbYcXKffwqOnzZ8/Bb8faT4b6fr/njWqplmr5eS5nxUUhgX+EtymT
P62dwAPlxWkuW4bNG3J0nOWGtI84QEV+M53oVvPExTrpN0a77GJ8HYrmY/GK
EuufcH9zIGMXCc8IPvTzEUpenzx2MVrqLxai2zc+cMfC4WFjWNYnu1fi1w//
6aLj/LqBReDfXd6l45ifxDe7m7psP5uNXv74B/db78Lc6nw0t7bibDNWtlYc
9vpqeiHw3nT3/PvCTSZ5s+l3ii9FG9KWU3sHjTHjwHGC0i9bwXcQvTa4E/4R
PTbbwZaUY7l05XBHl+2X9UcTA6rp77eT4SZtH7d2udpGXqaj4yomZbVUS7Wc
3yKOxPdH7qWgg0afbb/ZuxUwZJ5OnH2hedcX338GO3i1g/xobCy+PP7xLDgC
fibmcy4BTrvsYrjIdrxOnjDnC0OCEfHNZm2PifFXPTo53E7jOCJXrvxN9OGH
f+lwpPTbeRiujNhj9c6F4lXa31w37/ohfzPrC2R/c74fU9zmosm7D7Dj/stl
hyP5Pz/2afe5mcriyYvuc/CJjBEbzw+cDWN2HGvtj7WnK9G9jYk0pw3xgNju
x8XFbwecF8KiCJyk30+EO629JdvsM5aEyqUccG2/551qqZZqeTcXf465CD6F
sRO7817wkMjUZj4eRfdclLejOT5nc9cJVw4t5mNH/K81H3QruuZ5zLHvtZg5
vdM2p9/hW8OcCoYM+dLo2cA9giFZ45uDwPewBkfevv2R0yMTP8eWz7qsvaM9
T3nb4a/8MiSK0wOG9DFFyD9IZYauKdvIDK448dsj5hz9evx0FGOa1QYGSbk6
3gvn05z05SRGd6rvPof+fRHcpOxw+Y1dJOMNtpGKC5aONwansR1/GmxgiCXA
t+7By13nm5Nny4tdI1jS38425VUSh5w3VsvnR/2HtXJ62m0IdZNtp+wr5+pz
FaaslmqpluDy+WC+/dN58Y6h64TycJxFQnMkXGcc9zf+Lf+ZkPi5gp19ez0/
lg/28uI5zyJcF1uxCkN2gSET3JKHj6xur6XvNeZL6bT1HOJcRCtu3+T2zdiO
b/1mJtbKqokzCa7E1wEcOTz4seP0sE0s0z/zYlMpJowwpC/Cj3llN2MXtr7X
oe8sdNnYRvp1s/+DH+Ec8/ow5aK75roTS6vRywbG+WxyM9J3Fv4k1x4IV55v
vzg3LNnoZy5f0lQ9jecgLKc2hv+LfbYGMvFlyaVNnRgzwJL4eGuMaeknp/VM
HAEJNo7CeHq2/vnq746HPG3GFUN0ru135P32nzWYEgzJb/mGY6PZ73mrWqql
Wvqz+DFIEJsLukh6gZHCc3u8Rg95XrhVOmnuQXk5NEeH5nRfwJzfrO+16LA1
RxWda+P+teN18Tnopb3Yz0oS3ut6wLcGvfSbgF4xnqcT/qyBB/Gtsc9q/cmE
m8P9eORWJq1v9+OvHJakDOwkfRzp84IWO/hxI5HjNtx8HoaERyffEu+TeMcy
7zgY0q9D+p6ehM/x/YP8WAYaO9ABEPsHDHnR/fo8uEnl0L4yvuLiOOFfY+N/
wvWRR/PBzu3UJwZRbm3qAgdJW8FD+s8HnLf7atfpx7dfHUQrz2oZ/2+2sRYX
7j8XH3s6e8v9FSfgSvlt22dFXH6NjXG9mvVW3Eo3Hj6Pf3O/rPs9r1VLtVTL
+Sy87/hqXhlbceuQfY7EfisL2ykHGuNPEW93UZzlWUQ+2/49yreRe7Rcgo3/
HMKNEvCljxHKij/XuriQsh1rrH+V6P76js8uvewmc/puV/pshBjjj5/PurkX
n5kxLxdiGQFDunfpxWb09d2h6N7oQDQ5PuhwpMWSNve6xWsWt/nvlI8/FY/H
73P0YeW+sf081D/t/+IgQ7GD8vTfofoHx4eTuG+Pr25dOH48Nzw5ttHUaTd+
j6zMOd5OY6Z4O2T7ec3F7MHfRhgSUa5yqwOnrRUvkva15cwnMX/gIdOyG30V
u0k/5njmOTXGfY5rPtd4HsBuMuUmXzZ5eeoFtyCOk/Ptd8i8qZOVhadPHNbk
+H7PfdVSLdXS2VI0P4If955stcQxK5LjozA2zPM51rx1EXiwl5KnV7RjZnbe
6Tx+uF9+3lyb4scEO/aDs3m3xHC1iuHXWI924Vvzw+G642bgdA6PNzPYcGhl
OP0tfbbVayNgTnGdn391p4EVmr6zk2NfpFhSfi/M05q7y/QZ/aYM2T+Kg/Tj
gCvnkrXp9fu6cny+MeWG3gdEHGQ3/R3cGMfMv3zc+lmxpPTZ+GffWlx2/F4c
t34giLHk86JrXp2OYzjIB0axI+WnPe/hR1sWMc3d7wZ+pP99U7uRco/W3yZ9
hgGuMk+YJ8Cx7nv7aDtj+6v+FqoTYvvq3N6K24ZOf2JrucKV1VItl2QpmmOK
pe5iC5c5Ni+2SRHn+C7wke3E+mDzP/xrnh+NjRXpz7dF5RPzRHGY9X8cDzLr
o4Pu7zLNuZdHcnx8xxJfjQ65SLCfzZsd4hjBjHn40Z47Oj7i8GPo3bk/fC26
N3LF4UgkdAxxvv2cg+AM6a1trmtEed6t3ls6VWFL6Rjy/NaUs6bMu9Hpu+T3
68vYl7vmJhMdAfpscCQ4abmBm/ClSfPLHDQ5Q2wOaRddBx88hDEmjvtTT/PZ
8LwsNkMfbv/nHLbdS+x42Wa5SOFIf26wWLKIW475gLrDtxaTqt+Ja9X2lBdN
dOyxDWbd6fRjf7WB6M7EsPfODFS4slqq5ZyXXmOkkE1kv0QxmfPw6kWJ1cVZ
3ka5vH1d9o2FeoufQ9n6O1xoY52Y3+iur06su23Yj2V1f5dv7r002NFiyISL
XK6Xz1vD8954MufmtYXdkRbs6OPG4bXbQSwJXwkHObpazIMO3/nExS0XltR2
Hyfi3y3ukjVxd+Qj4+u2iUeg/w89HYK1iQz1U8rO67+hGOdF/6sOfEv9anI7
51n1ux/1EE8aW5OvZ79NeUTwFDjS5ipMOd/pJobETpv/4f2I9+Pyqv94kOH4
0BETezLlIA/GYvvEBj7FP1vbsb/8Y4G9krXNJl983rgVx0uPsab4an5LH57H
nVMn+7+NMcT7cXtkILox9Mv0ffFtNqXP7/ecWy3V8q4uF4OZOtPz9ZpbZIwU
J6J8C/jTaA7sl/ixV6hjKA4k+DE0f+b51krwlSGHoYtrMpbk8/Di5smPdaZW
dzmIW3WA/Z9jLyV2zOEi8/ruXgD/M1d2av/oC9hycHKu1PcEfKTlJOEffQyp
vNb8lq7Z92F59kNs66tYQHqvfB+dvFhdlDs3O1KYO7HoXQErIsKuvN+fz9Yd
j/6JjevzDvbhMnjS2UQmsaXAkOi04RLjMWTH4SjwHTph8cCMd7cexTke+Q12
BEPiR7P/fK/FntIKObTx09ExwpDkRMzLx+SP52W/d4lBbnUsEj+GUbb8HYdx
+Z3JG954P6jrl8O/iIbGPnE6eD9Oabv69Ht+rpZquSxL3jtyEVxcN9fQvGT9
R8qKfKFtzkB8RmV7zjftvbV6C3dyHlIURy3EQ4Ywin9OaFz2rzE8NRGNz885
XMh9z27vN3N6yG/Gi0vDcZfVjuzS4kdhyASbd9IvbJweyzHCLebprn2Bgyzi
8yz2Ep6YuHfdiXDjQn08mnt8x2E72TzuP15I9duhXDN8f8m+UmXbuTnkJyMJ
2UH6xxfZyvixg8BP8HC/CuLHd7f/FuLJhPsGTxKrZ+m779z7S7uhy9V4p3EF
P2yVA34cXV12azAk/t0ci8wnXKbFkPCR49tN3ydsDYm/A1bNs3cXlivDNTt/
7KdTad/Sdq4jbAje1f0FbTa2mjHjqNdK8m6xfXS98Z4M/CK1/SjqV2Xf337P
59VSLee1nCce6uZdk5S1ibTXYLwI+Wbn4b5mjL2m/YyfA4ZtR0aXbfO/9iq+
ub1m3pgX+hbm2BAPaev25jQ/h4+794PlaHN1InjNexsDaV4P4uWBF/3zU07t
PZiDzx07GpGP9q+mWn0LimQ28U/oRgaGfh3tP9/O5fMsF+j3t42l+2nscvAj
eauPA7mQ/T6qbztil1q7R0Q+NaHzJeDH+dlbbceVvHexaOxxcU7fcR6yNJ5s
fLO4Pse3S+OewZHkr5neGU/zxMTfy/H4cfxTPC5yLnpsF+dnpd70ud6J7Y3I
vcA2bAzRExPfx/rYKO5P8fjX+u1hv5Ot6Ds+pOcWFmS/zakT8qP09enck94T
7u3Lux84W8h276NyMXbLrfR7/q+Waim7lOnPee/tRYg/B5SxiQzVFR7St8uX
Li10v4o9aW24NI9yHvOc4khonLXX7xZHWt/qI4Px/Llc5Wu+tts5x7eDFJeg
4+zvUB1mp245HBmqI3Galdsj5IfzrvgjXCbs2CIFMcfzpBv8OPj19Wh+Zb6j
60jws4lxRowviF1uv7dUf3FZtn/Ir9vG9NN59ZcxBrH90b4X/BYH2W5ceuNd
05bjHzv3eDia2B782XDoKZZMuEiXh4c82g0cFYr7iMhHBdtJjlU54Mk7S3WH
MYkB9EUS65T+MF4bdVygMCT4kfL1f5m+FvpW/mPi90IOnTJxNfyxDlz5IJBL
xwr9m/dEsc0XZm5Hd2auRc9fbeWeA/YNceO9iv3Rb8xQLT+/pRf9th/i2+D7
Y0ieWDzn277459vYutlxoJV7FJZGbGw0cKTiE+uYkD6uaGzz71G8ptXz6XoW
o/pzpK6nuY/8NFa/Z+un+Rd/B7A5mPHl81W3loTqK1127hh6Etf7fdIHXhh2
NFwkc3En3yIhf2wbvyeEIeEQdT65bWx+uaL3hv/JaYMfj/rW6PiVeL1az/Rb
9V3L2fv93X6voTPgt95N/1vH2liWFV/nmXfcjen7P6N+2xRi/YAFwYXgI9oc
vS+Y0MX3PtjL4HXwG/+DFX1cir0k3J/yEoLVZPuIPjvVZSe+Nnn2ifZa6Xid
YDkr9Bnryw136NtX6pqO/078ZfAFx7YRPXqerw2+OORntD7hcJGd2i+l3/w/
lT+nW+k33qiWd2857z7ZL0HvgGTGrtfluMg83MbcpjmMuQobev884Sv5zVh+
T3aQ8Jri9vgNjjwy2MzyKnk8ro8v/euwzedvjo5bMaf2aZyCW/V12D4HS9xN
sCPC79nJQecbMX5vIFqYHupobPTnZOryPvglXDR2tBykWzfaj/xyZZ9FGd7R
4sqhyU+j2mbsr0qMcbaJU8x71vp9+8YHLRiSnDpwjhMb9Za+rWPs3BvilnwO
0782tpXYWsZ5B/K59HZ9Nm/MGJheupR99jxzaDtR3PGpGEeSS/v67LyzD7V8
sf+8iNHjl3Xz4YbThxMHEnvHw6O60//iez2/O56eX5T7Ie+5HR1vZmwnFx/H
7wcx0Ck3hB9tvcHFYGT6uuwkOZ5+GzrHt9PknNHV69HNr647TrKML1A7Ye44
i/3T0kKc29xicVteaO7pN2aplotbzto/31URByc+w45bZTAkujCNUdhcDS3W
03ECjCW7K2z6Ldeh64g3sTiS8+RPI2yrnDjKsWFxoH13Q7Zkb81x9p23PE2R
X6rv66DrWQw5vxPGINiVgh/BjWXHrxCXEzo39W1tXP/Xd7+9lHPypcSOEsUc
b/wmzk9ZnXYIJ+ZhyKHpxrfCbPwe2ZhA/vPl2jPjv40WF+5Fc1O33DnosInv
o3hCHMf+4x/z9XtFfLzNMVIUC5I6yef7xYvNFv123nllRT7hTRuQ3Wj44fol
6G9NvfGF4EhiLzSuR05sa1PgP0/9xh5StpGxXnvb8ZZgz+W9ODchWBKZ3Kql
Y1wongXcJTgxNObof8XVAZv6OBRuUbkQfbEcYBz3MRtXFc4RHh5RLKAQR0os
TXyJHi6PRKfH352pz/VChCFDz6ZI2tmo8Yz6jX+qJX/pd7+77KJv3xB+AkN2
otPmXQjprK3OmZiGxDzTPmFC8Y7Cs8J84lOkf+MYxjP5/GlOs3ZYFg/adxfM
N7Yeb5Mtuv9uUz/4Ts7FF5zxd3Fnz9klWR8EzrV6bOlo7DVfvFhN8aPFqnYd
EvnRtBP8W7n24MJ2tL/3PuXQPmfsaMXEi/Tj+eSJ75+dJy53zezn5ttjx20n
x3aoXHF+yNO9h24NX4l+/OkPS7FPzLO1lvNsX7L2GXabfSeFAX1dt84BN8oH
HByR2macNL/1FK8ndB9FfVvn7D5rPue5jc1L0OcuWODAZR/ZkLTtG+0tnbK1
lRS3p7iRCLiRfXB04DzW+LrA6dlv3lDsHemMQ+O7zgNnzm4vOzwK3pPOHFE+
nWKJ9fBTSb54/gd3+u+J7Drkp5P228bxY7WhOE/jyK9zr3OW7xp09so/2k4W
Z+9k7EHy3q8yYucB5o52dgbMd9ij2mfWb2z1Li7d9JGfo5R9n6z/R2h/6H0p
I/lxwWJ8JnxoceLxUdNnhnfK+mILl1n/7RDXmMch6hrX5+N5S77U1OXV4WaG
5+QccCQcn64vXpU1mNLmpQHDTW6G40EixFwJtUWePy3iY0gff/rPmP03Hoxl
sBHcDvv6PldeZvxoddoNwfe9TP8GA7bDjl+vPohWl8Ydpyg9tvwGQnrs7ca3
Brzj0XHNcY7CqeBHBP316uK9DM60/cD3ZbHfMn5+d//80DbyYrvYk5//v9Hh
YT31abO48eSoeR+6dgivtIwDxBY39hdDDy+A+7uEIj9tuEji19/duJnL7SGM
PSmGbOBPYk3ObM+7PNzWt5q1dL+Macqt7fpJkhum7Fg+vJbw3wnOi/XczdgC
4DvV2cU+T76lwcL0X3TtioHJPmIO2XcFfNl8r7L3Dr5DN8/5S/PDpescGiPL
bG8nPg8ZGr/zYnDYcdyK9H/t6sS5zEtl61r4HXfcely/sV3RYtvOcTuNfnN3
7FqpdugUu1TSubSzI+xVzhpry6/YD1a/rDnPcS2ez6kViz317tlv7jybfmHP
wUdNnKL3VpjU52r4/zgwx9rY4iOBvMuWB9qtzfSsH78x5dsxBz/X0fXb8Xw0
3oz1827NzX3Ajol8/E3sH1yUQ5tch8p1DQacbMx9zKuMZ+BFq9cm/g7x8zgO
DKky0NvFOunsdbbXplwscfnjTG6HdeS3Jz52/jj+t13RN2A7HZrv9yXbE347
n5rP/jp9R/x5Tu+G4ie478OT1ncv1Ifjvvmu8+VnlCReJGtw5N2N0ZaYiPGY
WUt/o3vAvwbfnI8GvkjXxCfPSAN3WRvCNL+g6SuK5RgScYI2Ro9E5cJLUgZY
j35j83KNrP/W3c+uiSsUj9s7af5u66vtxufEB8fynRKfhyxjFxSqu71/P49Y
r8R/54rezzLb7Pvai/oVjRudXEO2wzpHPAztqlxt8fds3Y2HcU7LMJ5g7Li5
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
SXN8t21osUIv8xFZ7tdyZb0q33KCtt4Ws/ZSLNaDVw3191CfB0Na/bSOsTpW
xMbSsTlybfl5HKPwp94ly9FaW0arOz/y8Kd9F+15en72u8/hsMPNFo4PmyN0
2O3eaXTQvk7lKPGt1/vn33vot76hacvDw3qqRw8dK6FvoJt2/ebVVhrr2ccC
1pc8yw31H6ddehHGSrAd84r6mXTXCFziysKIsZ+qp3hRmLGJ9ePt8XON9dh8
yxO/J6O/PmPdg/7YVjz/aYnsLrV/ZHkvyZfdxJA7LxajpYN/Sre/SfXXB+4+
T183jw9fv/8Yru+S5MzGZ71oXsAGiHdcebHX9ncdDxkaE3zsmCfoye340m5u
KjuPxVxD97aQeQKWBjvOGxxJDm5/bM6rL9gRQQcAvvzk4/87gy0R/5xHs1+l
5/nY087ZZbFAkT1TSDrF4CHdWyeiXIeSolzdlrsO6c7tXNpNXdr1xYnJYfdd
yxwL1v3yYczHMx8qJ3InempfeokffRGPdR7l2nVo31kkr03KcuDcs+UhLTeb
6l2Pm9vk063/pf+3fc1ykNqmckIcpK+n1jnyvbL5boQTfV4z9A25/Ww22vp+
1m2TP3o7/KZzr1//2xYMKQwc0gPk6c/xiaOcjSeTca7tw3ra/r4/vO6B+6W+
/B6dmW/10U38ZLefNG3UNLdXGLIDDCk8N7mTaf/m84jnF3IZSk8NlhQPGfe7
Zi4wiy+d783rOMchsRyRFMf1AEfmYsk2ZTsfm0Ydrj3YTr7T4v7z3fPZaKGO
vvVGdHdzKLq/Mez6u+1XlpMsV8dLgOf6gR8Tm4WQr54V2p95Ed9OxgI4SOU4
1PghPxdrQ+n75uj/dj40neQAsfOTxmmLE/mfumu+KIsh/XETHT95dvzc313N
tY2xFgnhQ3hLMKbk44/+r1T+6PLx5GDKk92WuRScFbd3uRwdiutX1A7t5OgM
HFy7XIdZqbfM0T4n1E0dysrnjXl3e3PG8TzMs7JjY97lPZGdl59X8bJIHFul
7qToOP/5d3svlkfrVjj/qIAb9MUfQ8T7CeeF7HIthyxcp31+niGVIc7O6qmt
j7iPA61+WHyjxZ56Dy1/6evBLZdsnwljXe1JPRMTOe9Z6n900Ii/z3LIebEx
/T6hspAPfvGvm+160jxO7e58tRtCHjnnPxOYm383s5r6ym4/W4jk92A5pb5j
tHdBEk4OTBV6Z1rsIQ63HZ7EbnJ96Zuk3+06nbVwJdvAj2BGcs04rMdzLPKH
Pg8smSdJPVb399P+8rwxJ248/dbhR2T9+2+jpYPJTL86TfQI+t1ZHS8Btrso
SXLUsBYm9OOYYd+AjSQ8peKJY5OfjgHmePTSxNBrYsWBlIsEa9n/izCkvsk7
nassP2BxYuxXtuvqrn2dzGWaQ+LcO1l9drcY8iwizhKsaQW8ydriUoTc0eBV
F78h2WbjbftyVv7LcjKdSmcYsunPYsdBa5/fSR+ymLyMvYGewUdX/63LkQgP
Sb+FU1G9+H1edhpnFZ5RPCbHdkLoCtWWyustvbz0EBzbSwwp29FO+5fOLauP
t3gz1lOMpNgtLy4XGFvPMvQM4SQV14zftJG4Z8pUHhmfM7RcbYhP9DGnvUcf
h/o6CPHgZXlZicWQPo9PO1j+1ddjhzjJzbUJ9/+HH/xFdPWzv87sd/d40vxN
+8Iz5uGeH/5jzD8i+Dp8/8NSST1jJUEcObUbfG55/QMcib0jvKSNDQmO5Ng4
3/Fulj92cc6XzwVD+veSKya+jzAkPOSPR7sOR4If+SbZffmHaP67evTix53o
u2dNO8nT5BuKb7Hu63kJcN45SmoL2XgWefMc9mXocOsvYp+b56+2WuZs/QZr
Nv1lbhrf6+uOv2MNJlW+wrwxrpf+mxqr4YVCMYjKCvUFP45vT7h8jRZDKjej
5Qx6Wf9uxPKYssv0cSfYEvGxky/aVzaekaQIi+ZhzCIMOVOrR1Nbay3bff1e
J1xkiLd9m+ho6M92H3Np6nfUaBdsEeDk/6ExRtGezLP0syHnN7qfcpPnGben
jNAuE9uD0dzjO+m2zxI7FDhIbObAHYr5ozjUEm0jxpzwZpm2DT1zcVrCbnlx
M23di55Xp/oK1UMxfqwdcOi64MC8Pq8xBWHMog2xhw3F+g5xjymeyvGfYa3+
YzlI32fHxhT1uccijB3iDi1+tHlh1E6sqQ+xGvOeDfVTn8fOcnDwo8wxiglJ
DPHx1a1oaXszdw4mbp9019ItvnZjUlPX+KbSZ3cs7cbE7HfLrstVA35EiA+J
D8NJklubvk88SIvpuvKhKSvGxrFIrE/26ev9jC6bPnN/C1+P30XjG3tODl4e
pDaReq8ZG3tT7/7jvXORxBaS5yG9tC/gpjKxvBF4LsV8hIeEl8S3G87Rzy2T
N66dhcPy5wn9Fr9a5rw8DBjnbxyIbi3Nu7yNyt2Yx0NeBhxZRsRd+pgzhDut
vaabxwrwpm2HTrDG+Gh+7hd8l4rOtTl9fS6lF2KfKePLL375l+m79IuP/53j
ocBX+NfK16ZTTrcsr9apvPaejcY2rmXzl+SJv7+besq/wuLHovfSciV5drGK
w9lpeyh3tmLfddOm+pbWfANuUp5K1e2tqaPVbfv2kZZTtTaSVj9udT7W1yZu
i/g7YGChs+dh/8eOUVykdP6KM2Dxbj2JdVrGhoCYk+iz4SPBks8Olt13C3O5
zW0X7HON/U9e7CXPvjm/iyfit75B/nG+V3P9z0Okl7axwcGEIW7y1as1F0tS
/xO/B9975bGRv430y+fOP5bAj06Ux3lqO3p5tBdtPGly13x7PP9xI43fo+8S
+20ytLjbQwxp5RJgv17xkC5XUByjhzkiNCYU5ZTW8cS9AVNlY/nEOus/JnFt
pp0e+Hqa56Zo3OlU/Hr79o6W16zXZkrbQ9ox/TTJsag4l+i15+pzaQ5G33+j
m3mtE+mnfZ31ARLeFA6127HfDG2XhMrGJ9C1YwCT0m+w67QxONM+EMCzEms/
ehbhOj6+juPWNWRw2L1D4MeiufW8npuvmyoS5QaAs4I7Bfe2w5C+KMdNuzqF
tpXlsu350inb/cI2wmfdtBfSLk6mfXYhHzP55tj8MbLF0TmWS7R2jirX/225
Rr/f2HbQ+LT/PLYxCvnr2PND5ek3GJKch9bXxd6Xj2Gt/70d7xhvbbx28KNw
5Ce/+dDxQ+TadHnlCvqY4j+/MfjR+tTI34G6vfyPlT67E8HW8eu7Q45XtN/5
oW9+dNmyzeD/u0OfueNiXXY99adpiSXeJqZ4V9JBeWlczAdxfnj6HH3l+Kem
z/VPx9uNOfxOtHowntrmDkxvOP+Q0jkSu5b+Y8AziYnpTnvlxeLOm/ssryF/
ZXCkctJIFGsFLIkOG26y3TU64fBCOihhxLx5ZW5yMLjd2hn5cwTjoeJLWx09
vGsRzu6V9AJ7nBd+Qc9x1jJS28IEj4I/7Tb9b7lRbfe5VJ2vfRbzCddablX7
83jYEJ4FE9xsYDDw6dcre+6derC0UNxOiV9ap7yXjal1VkEfLZ01utizjIFd
9ZUu7yPEQ3ZjS5mee1iPxhfmUvwHjmS7P59aOwTLI2q/1ccLK9q6yuaSbwv5
XFmfHTveSC9tbTJ8TGj/t/cD1grZT9q66xpFfjX2/mXnKb9s36ZT46LfNvJf
Z3uat+kkbnP2ffy730Wf3f99cf9qzE8x1o6xo9OdNsqANxJ2FI4UZ/TFTEl+
qpLo2v2Hbv2be9PR51/diZSTQTm0Uy4k8alRn+Bb5faND8w3Tz3p42Gf6Z7q
tBNesezxyoMoLDiyFuuy3xhbR9bwkU430uhHn05uldaV91YuASbsVIweG1+T
djo3OyaBncCD+t/aBmIrGMKQZaRX+l879obk4PGCy39dtjxiY2pst1ykfITA
0CFu7Ociz/aXSh3X6fNtx+flzYWdXk/cpwSbSMUtL3M+NqV7L2qFeviYK2r6
2bQrU/reo+T7f+9lvv9HWWGsGkpibvRCRwMH28n15W8S+pbx4yrk3afl0RAw
Sjd2KrfGJqPlWjN/lOXTrJ2h9e3T87B6aP1/dNzk3izeE58X875ZftH6zqge
Nq6P7tfHtb5fOPgxlOcl1MbWflJtwpo4PGBI68uj8hVjwG733y2LJW07iJ+E
+2Eb3AN97x++HIw+G1uOrk0FfGmSXHTyiQUvEsNvrDaY+s9+96yJL8k5Ag/S
Cb6oJCtgSQT8WNuciXVvjTEQXxr7nL+YrUW3xyaSZ7ybvKs7ia10XJbyU7qy
Ta7sfojlIumD9Kn17x9F32xsO9027w72Etemv3M6b1fXDrFqb+USYMNOeMip
OH99Ow7SiuwdhZmUE1sS67MHUn2vdL1lpN280ck+X/fiy8LM7VJ1Eq8AjqSs
9SeTwViXFlNfJrkIu8zNlfGuzus1L9pteUevsuOkm6dPtiJy3ZS9DvHN4Th/
/eu/cYIfvH/M5MRA04f+k//H2VPiHx8q7/gotvVSzu0jg1e66QPkxmaMoszr
PbIdAxe18xfyfUksH2aP0/ayHK31hekUV6u9bw3fio4SzsXWT5hNmN3mHbL7
KEPYynJwdhvHYlN4ZPCi5Qotx6e62f+t/43azXKB+JnZOOO+P4Tfxj5mdVxr
babFp0bicwviUvP4TNlw+t8KnCM8uLXx++janW9c7D701f58DW+EfUXT77qe
xvGzPrQqDyzg8iETt8bmRa4kV7BF9eO4u5g58HYNDDi/Mh9duXE10VvHOofR
1djuDXtIYvipz6HLJv+hfY5gzTTGTy/wWJc6cYshr0zvRTvf7zs+0tlSgHmV
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
0uqRbRnfrO85fG7jCPi6WZWf2jc2+jT2kcTOCZW5X18O1pWyXp9mY9NaO0rp
vG2seOuz49/z6U87LX1KGHbxcb2lD/jvib0vG6dCPOT20xWHIUfHr7h64mtr
44Hl2WL69WSNv8zUwreOf8TuEfw4uXwz21ekE036ZmF/SfouPteDj+I+TVy/
g5cHaYy/TLl9n59/RmJ4yrTtG891bGOl+Z1wHnlequ+EHsrZMSS5afJiiyvH
9eP99ZZ9Pn7sxqfE1z/6Y2G3OKvbnIPkPsQ+ssyx3XBN77OEYmmHhGeKntfy
Nv7+MuUo9rb+9+c3az+nHCZlnhn2kNubNtdQPViuFcoHFx+8zGIUXT90T+1w
prU3S30vGv3a+qlZ/o3rx/ppK7tdjeGKqTJjYgGVHdtlN1Xkg1N7utOC6/02
svyexdLCkPbejwIY1Jbr24P4zzHvG1q4CfvIrc05x03ye+bBsIsnubI07tZs
W/r9ffe/8+8+yl7X50X9568xz/YVsKuVyfFbbh/5NIgNv1qP++XGQWtMzoy+
Ounzln/FvgG7R9YffviXLrZL/cVCagshTtxvC7UH84W1u7BtBYb8xweb0crG
793va1Objo/MzP9+vyjCBKb/pvlPklwj5Llx8XxMvt7+z8k/U7F5sW2+7PO4
1oXnH/y5SIf4MeGawZD+eAEGszgMvXW91pxX4SDhQcjVsr0x2XEuw6I52eo6
rT9mWelWjy35dqx8LMv3jUs8i5TFkOJCmNPg2s5qO1uGWxQe8e3nQoI9pJ+r
8I3BkSk28b5TLJema9ntb07z62x9V0NcvG8P629Hfx5+13c70mMPrzTxNs/n
rGNSaofv1UGxin1uy/Jd1OP4KIsZbdvxv8U6b7z2LNLj+npwbde3jbVpFFaS
r3L6rdvo7+jj0b1sPX3gOEn2jdwdTPsLuFPbLWfuOE4v3ritI7iU8l1fSGKL
gl95znrecez27Nht+40tD6wowf/63sgVJxP3rkcbS/cj8o8g1GOicW04RLWx
fS78dvaiB3vNWPevsniZONUuz8mDOJ4g6zQuzFRODOd2WMPMVzbfSIof+56X
rhKbr8DaIJzXtfp+vz8L6cwfOyQWR26ujjt8Jt8a/GzAW3dmrjlhX7cxcvy5
+Cw2c3CJZ7k+55e9D5/rOOu9v8vi5wksI+TW6AZD5vkYhKTI9j9PQr7Z2Cq4
Of14M1gPYR3pVy1ecO1jdJXiF23dLNZ9exruT6G2wj4s/10vP94SDzyLSXs3
3tu4QmxDJ3l8lOUX7T2FuFvbPpZLfB04xvJ+lq/0deLCymxDzw3nCi4LxQ1C
4lhOs07viz2BFbbpWHjDw8N6NDpyw/nnHB0XP2N925BrcDZn/NKYxDnUmdzV
/reGHTfhGSX3h685zDh85xOXs86exz4bh2px4V50/GPWx9JiXcvv+/EQEGJP
C0Mizj7O6xMtOs4yWEO+XNZHo8KPl066sY3uWKrn3QcJY0h0AXnzqLhI5I3Z
BieJ3SC48e7Kb1xeQ34/f7XlcOZZMRyinNSF2KDxrY/+HE40nXtebnbEI4aE
eJHkP6Qsxm3rS8S18L3ttMx++6lfhPg8pOLd5MVJhGcCqzAXPjc5/NCfItg0
5tlMhmzTcvvJ6+wcWOYcP153mqvG4JeMzYV5RxS7JcYxO85nm202V+GRwTi+
LlBrv8+EsBbvbwg7/kNjDJeUGR/giexzsbxRTyXDI8Vx5fJws8Us1lZQ7Rf6
jvBtCPx2s1zxcZK7EL0wuBEMSX/ED0x2CRyH//jE1kRsL0hMpNWRFvwoUX3g
H9E9r63Puzrxv+X03H00vrmsTzg8I3gz1K/Zxn64UPhH7GVDNqQWN06OfRHN
z9x265Z31fQtxrj1JxOpHtvd87O1ljbV81BuHf9d1nOcfzTlnq/LefegqX+2
3zItXGSHvJLy1rVgykp+HlJhyL5KqltqCLrEdvOpHaeEKeOYNgPOJ3t2X3b9
8bwL5gJHInCT4Mr5mZijXFqKY78Qb3LmwZ1oamokWlxdcPv5X/iT7ZwrsfVB
dwR+tLaY6NS1n+udFQ+ht6cucK7iXZXbENyK3j4vb3IQX/0MMGSIhyzKnWLn
eOZE/JrBjsxHoXkqr0+WkXb+GqHtVp/t660tn+ifJx+eND9e41zeM2L4aO6X
zWSejlX9xe73r8UxIezY+n/xeHB9vumTwbM4r3FHcX2cfeXYhluD1eZ36hl8
b9vA4mn9L79r+wwyfjAmViOYXW3ux8s5NjlgeFY+T0wZB6+WXBx2sKNwov3t
Czpt/1m5azS+r7CVFJfI/+irZeMY68nzv+fVD8CRW9vLmWsQvwn9NHrqz6//
Ihq6+0Wj3MHc98f//uL37RsfRJNJjAn2b69POgnZTkhPZOOas9b/+F/Hzzv7
/IkL42LD9Gr+r2ziKqnk4sXyAFPbuWPW6zY+KXBx4EfFGV95Vktz07gx8ihb
tuwp4fbAkfyvfYrTnL1GdjwVloT//PLuBy05BnU++PasPKR/Xfs/5euaneQh
OYueu1O81C/pRpdd5p7z7r+bdukES/7T1//YfH7mfThs9G14Sc35cczI5nOW
HlS2esTcgddT/GhhSMUsFDfp9xfhp+cBvTgCH+XzjmFMmT8e4J/RvK/YP6Pr
uJEF8vXyunvP4fLctoR34lr+/epZCOvQjvrf5h60fs46x+ZT4TsEXtHqsq1/
i64pPG/5Tv0PBwmGFEYknhLC7xAf2XzGOw5/+t8Cs/Pjzl5yrIHzVD7/ryze
LTVG3Jqac5iRmPFOPvzL6Pbtj5ygqyauDjoc8s2F+ncef49++2WjvmNbN6Kn
PyxFq43v5tsTH6eY0seRvq7f5cqpL0ajU5OZGOI+jrTPXvvdMZV9WyWdSBXD
qX+idu/ADtL+H+fNGE5jIgpDTjyecrxkN3ihHV61Qn5urg2OlIAZhfXApr3E
kH47dJsX++fgw52NL96eUylur6aO87zsTNuVO3r7s9x9ls+yGMZiPdlESsAV
5Lfh2OeJ3ZqNUx26hsVVVtc9tr4XhfCj7PnKYMjJza1odT/mANG3Uz/OBVeC
JYkZc2epnmDVzsYZ+XV/Nh3XCTtC8NLS/r30GBdH+ndfpr4eYCLiE3KPNs6i
sCJ5adA3Cz+qXaVztvylcsmIL/NjP1ou0/q3+Bwovye2sxwkGFL4kf8X6uNO
mmXUo9/vruXadFM2cY1ocx1v6x8S2uc3Nz6Prt68FV258jcOO/7yP/xr50vN
9zzjMr8Pj3ajz7+64zCk36fybDkWZkecTSQ+NWMmXhsYcrI2kvpK2n7olztf
23K+1xY/WvF1zdZesu9zYiXvnlR67P5JgiEnNsKxfOIxIfbR0//wbcpNxlyQ
iedTX47GtydiLNnAd+eJUXz9dZyfuMkTiqu0HOdZJBTjR9i507Ks3dP7Kr3O
cxiyO+yF+PriPGnFkPWWedRyMb5dn+L/XZvN8lvCOCH9rX//HGt1hgjYLsWH
9xYj4cXr89vR1ZmtcHwfI9ggYjOga7x4ser8i/mWw9fF90FB5xvj0vbjC+er
vviegL8YM1zc2Mb/lAknqXkADImQY+/W8K1odPxuiu+sbtq3h9R+7EFTm4Hk
mPtrcXx56aqtblucI/cLZj4+auJN++z4Xzwy//sYUv+Di/UcqQdxFkN9GLF+
+qrP0eG2a/+8PoiPzZUbV52OGkHnHJex49o0lCPr67tD0e3F4ng/9vmi99Y+
W97w3NXo3uzncbu9amJyW6baCQz5q2+WwvNNEjuwEDcmtlV9nx8reXeksmW4
eDH+9qMFvjRF4scVxw5RvKSNW9drgQ8k7xvXIaaQcgnzm+9wxRbCx2f4m0/O
fD3wo41lJKEO3caeRPycLe+TnFeu7Dx+5qzcbqc8ZGrvm6zlg+37HMR1i3Ea
mAXO0D/WHU9ceueL48efzPq32Hkb28UQ9xjv23YiDNnUbTfHgLge9N/4nCc/
PnIYRjiGexN2Q++8m7zT4NZ2Ou4Y++0kEteXdxTuUTwk90aeQ3ItgsH4PlWb
zNRiP2bieaP7H1qMsSDYDNzLNo6BG2UfHCrYFr6T/WxDsD1VbEtsUK8+2Hbn
ks+X/XCs4jmtraXtF/Y7A4GP8zEka9Xd+kzl9dmQXxe+22/NtWz/wB8G3Oja
M4nf+PrkcWqH7X9PTybxeUfHR1yMcF//3Nr3645/1LZpk7cVPpLy0Gmndqiv
Wm2AiR++tr3m4vn483vG36UMPqx0k5V0IhWGvHgxeuwQDxmK78iYZf8XjutW
p9vt/K7r+XUM5crBR7yTfDNBfNLAkGVjjXci+HyeV5v1WyyGxMdTGOE8+kPe
tl7K8O3mt4j1u7aco40fqPk1jZuXxAV3Oe2e1jMxq/j2md4Zcf119vFXTlr6
oIlRSDnknvHtHsFQ4CeO//LhXooxfQz58HGskwV/TH9323GC+H8gikuD/R7l
HB3HuI59woOqN/iL8rimdNwDCyuOwwQrUi54kd9cj3L4n7IpD0wqDo/91IVt
7Nt7XnM6W/xMhmYWU9zRDruyH4zImrqCFaVLDx3PsXCh6kP+s5P+288rg75a
OFJ+NawpRz461vbitfHjD8Ul1bXemn6l39g2fvTpv49uDP1dUtbj9NuFd2u1
0abfJnY90j+zRoZWhp0+u+j90D4wJDp1ypw0NuYOP4L7XzR5VmJCPnzc1JGD
HxHnH6X5HG55ZK4wvnyuVDxkJZ1IhSEvXtrYQob8AjVuodvGj2Ws9tvmt2rj
90VgE3hOsCLrV4cbmX38H/OQ2EDGum5wLjhyuXa/62sS2+c8cEqvckVfRrF5
DulLB68We8ZN9/I5lPXFGRr4+0yMkzdOl920XZNvh82fomdsbRdjv5ldh0Mt
hnS5sPkmA1MleUJD9cOH9/ZiLYMfwUc2LhfXsXaQVhT3EawGVpR9n/v+SvAc
v4UjEekt0bVaPTHfBOwHF87sjDsshnCuBBwJNnSY8Vnd/a9rS1QH9kkvi30m
15B+W8K49dnkZmYs4175Hhtbj3PywS/SJsK7xIUqwp7Y7S3u7LVgSGuD63OR
8bPcdb+pP+3APWw8mczohn0bjFCcJp+P9PfDP+LnovPpd3CRxODxv5lDArbb
f77dtq/je72a2CdNtvgpxnEVlhaa9kLE63Hv+vZajB9Nmzr7Vvyuzzo/VVJJ
Gan6y4WK1Sd0a1+G3lrjy/TeejR7TvaP4A7lTXRzVeM64EfLQeb573AM8yE6
7RtDv+y6DoqBeR73977KeemykV5jyDLvALpsG2vct3k8Om7yVc2Yg3GuePlx
21iGwipsn9q56bAH28e2xlo49tRPuIEfB4ZvRUN3v4o+ndpy/J/s/2xdwZPw
a2An8BVYE722bCd4j77/8ffRcn3L4cCjJE66YmXzziBgudcJ55rq5Q/xiZlx
umjpqqk7uFDcXCjONvuxlVNsduoA9vLjc/N/rEOvO3tCrvPZ3dno1sKmK//z
wRvufPTpD2qxvzU6bWR4OW5/xU7C58b5YzeOJedO0ZgIxryf4GvaRPjT4kjr
cyNeWO0vn3r03PbZqq9YXx/53iPK6/L2NPsNkvarl5sOQ2b7/67TZZfBjxIw
pM7PyyEG30m8If9ccOVbdw91hyFD/jQ2lnhP8gxWmKCSTqSKEXmhIgxZFM+n
nYh7nG3MS7M9suuDQ1ScHo1zsd9OzM2AH+Fq2C6eRnEarT+NBOzHvtHV69GX
w7/oqk6KDXmW+3rf/Wd8Ia7PeWLIdu1peaBeXte/J/ll+PN+c3+9pa7yt5Bu
9CSxg1S9J7ZmHZY6SbCbi2We/Ob6L15tBetW1CbgX3Txb05jPQJ4LvZvmXH4
T7yjhP9578BSKX96uO0EPpF9HAe+lC0yWI/y2CfdLvwjx7GPY1mjK13eW3Z8
JbG6uRa/Z3dG3Pr63FYDD9aizb2sbgpekX3oRaWXFv/KbzAgemv5arMW7iPm
ZJlc37IDAFuLP7bxePy8h8KClrs88uJ92n20E1hOPinqN8oRKLH9CB2236/A
2HDXo+tZrlD/+9vvNsa/+ZX59NzYXn2hpZ/gk+36WWMcxh6SmFVbB7OuHxd9
t+FDk/KQic9Mv+e4Siqp5PxEGPLag+KYPiFh3EMvmY5PGzdTHGl13WXLAxOC
RX0fb2FC4UDhysXEJl/nWxtIiyPXk7lRsX86iQFu5Sz5tjv1tymKK/wuyXlj
yHYxfnw/6TLllTlu9WFTP6++Dh58ntgowjvyfyiftr2W4hpanEGcSee/3Xi3
8q7P9wz5u/PKLsLMPBN41O3NmQzfKFtF2fNJp802xTUESwr/aZ/wJu8iOBQ9
tPhLcYpgSPZxvNMp18cdbgxhOfxq4PDa4Tznl2Hyp4WOV14d+EgwJhiyTJxL
HQOWRedvbVl5rsq/QnuKn02/BUzOHIsPLc+99XSp0U5b0fFPJjboqzgPlzhJ
y3EyjqIntt8H9A9fzyzcOLx2O2MTKRkY+nVab2xt8zAk+bL9sVt2muithZet
Xl3H6XmU9pkpIxWvVElZqWJEXmxbJ+tOdYIcD94T7ovHqIHU7pDfsmeKjy+H
ocQ91l8uZOKDMx9l/Xaa19K5zG/az/G1pyuOm9R8hi2kdOHdiPLSONzQmOfP
w7fGtcHOzQw2fpflvDGkexbHrb7Ytj/beH+9umYob7bmfMXuCfr7JN8S4hY1
L2fiWCd8JDgNsfeh38KQPob2440XPZeDx/Mu7iKxqe9M/jrFhDbuoWLwxHi3
5nCkYv6AG8GFbJMvjvbZMlw5m8vuOMooE1cSHyD5v7TFkg0cqXzb7eaONB9O
yTFSem3FFeJZ4RNu4wLh8wOOtPpnPSs4Qut/qOcFRrR2lcKg6jvo+g+TnIv4
rBDHB7tH60PDmNqJDju1Zzxs6pzyfCDrtVlXT9VdcZmoI/UhziQxJ4cHP86c
B75MfRp6PY8rB3a/581KLrfAf//TSv/r8XOQ5B2/vbjX8fz6x9PtDAcpfXbG
7ublw8iPKVmGX3v8fDbzP7jvUf1uBh+KV2SMTn0WkjzMIQE/YgfJ8d3iBvTY
Lp/O/LCLV45dpMWVZxHb/vhCHh4X49N3RSd+ERgSUUwWiewP89r4rIJfjV82
z+T16UG0/f2um/v9OlmRblh4RLlpDl7tpj76zofdzO8Wl+6sT2V4yNRO8jgr
wpQhbGmxy3592eXcA0t+fe9KNDc74n7DB4L93HGHm2lMWATMCHbknY5tKWvu
OPAUOmDhSNbgytg3PDsGgdEsppQeGntN/GLwiYE/RLfcdt4AS4qbbIM1fj27
WnqcpH7gSGH81Xrd+bP7z97/bgF/wQm6HKyBbxhrV2n9tG0sdI472F1wGJLy
Do+a+WOtHw0+10U6bCtDk5+aeu6kfGUc16nuxmviB3E9awsi2wvVPcWX9cW0
f7pY4gkPdG567IpjqqSdVL7Z5y8mJuT9P4RxHWPC3vP8edAfm+4n3CCCHU0I
Q7KvE/024nxVc7CqzYdtfXt8QYfN+ixxxsGPC42xVfEh4SJ7hSH/mMT70LjO
PZ9nXM2Lkl7mOSwS+SmEpOPvoxKcPH3A5s22ukqwI9gwbBdp+pMXIxsfbfyl
idXDfmzQ6AOKg2TP9THkG+8aRTHKEdkIym4vE4vop930XkaGPnVCDj44S3Lv
bW3OxfYmDXwoPYOtIz4s6KPHN+ddfB84SPBnaBxSzhq7zeaisWvy5JQa2xoY
JsNNBoQYkuBc7C3L8JLg2tsLGwmOjzlH4tngj827iqAbtj4x6Ksd73e02xI7
3oqwovXTcbj+ed3F4sEO0vGQx019Dsf542I77JhiyOkBZ++o6/Ps+F7h9+vT
7+L6J1yl5blDcSWpB7Ei8b9h3LJc4bnaQlY4spIiqfrHuUv6fo/XOppj4Rx+
OIx9r8FyFs/hkz1eG3U22P45rC3GhFuknDzbRIehXi44TpI15/o6c8SPM+jn
y0aU49DHZN359Gbxdi/zJ0oYz2P7s3x7uG6xz0XLZcCQ59Uuvj5buCvOL92M
15yN1bKT+iX4+UFcLJolfIbrTb7nJD9eAhjS9yW3+f6kI/fxJWubE1BxJu02
+QepbviBI0vzsa+xw5Lfzzp9tu7L5iYFNxLjhzEGP+k8/bXPQ2K/qOdFGygn
jHxTprf23TG0bzudeMpJ5uzHV4c6l9VtfzFbc3le0OVavTX2hIxX84/HM343
vL9sR2+N/4x9NjrXPhP7TcE5g5Nz0Ue/u+lwpP/sOceP52PtIEOifazBfbZf
+PqZualb6W/uN6tLaq71nfR072G0sTbt4rZfCIas8tdUUiQVhrwYSewgy86x
Lr9aor+G8wPfaXySLw1+NSH7Go2r6D/8sS3ES+ITA3bUMd/UbqTY0+ckLdZi
Lnv6w5I7H1tJjh8f/c25YZde5lB8H+UiMCR6a2GNXkgRd2jFxr1EjyuuSRgh
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
Mbzog7hGwHqbG668SXikb/sM+bJ9f7Yfy7u/u+LiGm1sY54jr1jH/vdkb0xI
+IBh/suqOQMHsjnVlg/d3D+Xb6Mx468bPzg+Cajjx9jEeKWxS5oRjHNOo/bN
QN/OzbGPr+f644cVPrNJYtxayvQJtjs4s2pGxuq4lAEOonliXG320wSfQ57k
dUmXGfthyE/bND85u0/D66z9ZsA9Hpf6of05uSrfLIbn+9vwe21zvfS4w9fo
c4th/lx1HYU5Nd4yP3ZxUnwxBHKGP/vvFwvtj0V99c5xsBKu3IflSkXHloaO
8mLg/iGftuWawksz7hKLuP9gPueNfNd2xCiSZx26ntC5tA3PcpZT02/DqwOn
Ia7ff7x+2+HrW1vD196vhQbw4YOpz30JCQnjweREzm6vDuVRwFWue/5sOBI6
PjY3GJ0e7JdwQ9UyXF1fdFxye3Pe2f7glC+f7zhNu19/3R7RY7bxV9QdniZH
GvfczvfXG4PhkfSZco/GwUnXlD4piEPG2NEmBZ5D8m3a0Kcs4mGZHoq1x3Xy
uEZ77SF7jn+sNvrI2spCfvQilHE5X6dSwDdqryU4BgXGpqJz+P1V1a4Q/DhN
H36+dCi2cLRtg2Wudt/y8bDmJP7aPn9kuR3/4Iz6Lv1uxl/lyNj1/jnhitYH
tLu9lHNGagyWXSeaj2CgQ3qct8HpSpq4SmcHeH3s3metjfRP1y47f7W4o673
ixubec6M45P9/OqkGZ6Q8JHA5tT0/tPXHw77YOE+jGF2Gb5nIJ1HxhA4E9zz
X949cj5qp0F7vNq907nmcmrY1sZRXpr7ncvBgVOiA5Tx1oFGdtuxaoN5/OTy
afBnK5eonbZPhkNOykcdi6Pd5ZH2lNltscfQr5Nod1v8NbMjDdfDkR3ZbqNr
4L3qhcmVtXbKIg7p2yTr2s99nlrVn7ZvfL5mddCJY4R//PnBX/L1Vls2GA9Z
otsyiZjoGHurNBBD68Sv4ImC6jeqhiIc0c8fsf7xUGxpFks56K/Q8+jqEfbt
jLI1whMPHizlqNsf7J/rCry4N3TdviY59wP7ZeZXypaduXmn+4XHCeGM526t
dze3NgY2SWn0JJ2ehISPA/zv+3bILxb2HVfEl72c2yIzXqcYSdbDK6lZONAO
63Rfvt7O9SG1bebHPd+9uZvxz7mtjKPquPBI+OQ3l2cdt0OPkjHx9Yt9xy/b
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
P3ua2S851629CyMcEq3xxB0TEj5d2JrZGhfggtgh8VUwfvgaiUXjJ+MX64+f
D2yXYZ3J887PPbfV6c7cy7hUbJ7BNMAYjN7ROMd41OOJXK/6neuGj/Eezyd5
nSFNSu0f68f+0LgU7WWOrxMPafMWqvSQTyuO91cmmkNWR5+8KZrUQxy+f4M6
iJluYcf5qvFbLOx0CvW6QxwNG3mRbxhftnKLm/dn3HZV9ly/Xk3d+6TrUlwj
Y4d932fMHldTFk0y7sPC4qzTgGcZfnp/bCIG0/F948tKSEj4hGD++5dWt/I4
RhvjjVZimS/bh2JvVNemTLMbLmlzTE4r/8FHH6rtbVHlx4ZDko+uvic2kvmG
fJnVg0fdN789dvknNp+GWKfB8U+HNmQR7L17VrPmOXZIn0NW5RQXzdWn9RkK
gdyUSR5/kjZsOHCZnlHMvbE8T3kecJfK6wrY+l73Yw/5Psg5zq4fDvnkeKNW
W8dB2TO4eOtcsI6gEHoPsjUL3/XzwLk29ZliG/lUrKTtY1uDpgpO4+iXXVfv
cdu8I/h+7LmHF7tbj9e6XyiXJuXUJCR8ejBxR5vHu3kNGvyPjFXY3nyN8ar3
7Lfv/kf36cuNEV3JUc3xDBrn4VgcG05JLYpp588K+O5j9H5ibUrYH9X/59Y7
vWsdzIcrXn1ycUrWNeOQ0/GD17UHwiHr5tSE5sSQn/w0g7jInc2bJ3KuWD4Z
878jJ3tj+VIL7RptU9PYRb92zSDeMvt9khyyqC9dHc7NG6Uccnj/zBdtdcEV
AyR9Hdlv4Y5wZ+XU8A4P5O8OHVvfaQ/xrdhIGcdUi9Juz/Ht2IS9Ey3NL+d3
cm0fq6uZkJDwCaE3BqC5A39UXjVx2IwzPheMqW0B99T25GLruzR+BrrjGbe0
fmxiBWnTSY/3IajuN7GcVZykCYcEXyx3uuudJ9kxjCaO6gSJv9bhkHYemXYf
xqAuh3xvMO22j4tx/dnWLrvzWLGDnbE1BuyxQ2jDxsn4Ik0aweVwRLyD1I2H
bZqbXXTsmGcPP7O/bOtOpjcU68OGA+r/rLxsu872pdV8JO9Gy/lt/dvKYX/6
6I7jjvj5iReFQ2I7IK7mj9dvj7RF/my0OtD2gT/mvDH5shMSPj2Yugv4rOGQ
+GzJg/m3d4PaI5bz+bkwPpi77PajsZBnXa1t8mrgZ+TgrC0NbBrYIMG489O4
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
cxA7ZrG//NauBkyPP8IjWcYn4PiqU8g+c9vfOVtkm+/68hXJLlpn32nbILP2
m+89jufHM+L/FIcM6cdpHmI/6hNaG6Q/38MtiZvU/MX2fPfnVTim8jFOygd8
tLv8QdkhmaetDbGon+Cavp/2eH/FceZx2zAuv398uN7dvJNpYq6vzDrdoTb6
xn+HgUtRP9wua/Jcjcu95T8OtQH7MP7uuscsevd28TvXz47UepSfhP/d6tGV
Qk47OkYO+lTPE+1HX4nYR0DMkmpks5y8mpl7nSF9H9XATRwyISEhBm6suJXl
4c1t7bt6NVluzGB8evUm8wm9en2Uz03/8u7RyBzla0xIh9G3g2GHXDrO8rIX
9i/ndakZP/HroPfz9lU7tkjGWuL6mvDSNjkk47rGduV8x7V/+Pden9/rNzkQ
mjtD2oyKrwoeOxDf+LZfk9dySPin1aDDZx7b/rYw6XjItmDtj6rhJI3+UE1I
tvdtltwXeCT1tMu0G6s44vuCexwLbG/o4VBTm+eMT72vjMNPrZ3c9YFX77AJ
XJ5MC/Zbnnv5QWwbef6VX1PnePwni/5/DzcH/gNskdLQ5Rz874r4bJVdORQ7
annl4u6+q2eIHZKxXv5q90kcpHAK5qeEhIQPAH0OqXEj4wvDYyW8ZdnVfehU
ziF2DAvlZCs+UvGSOqbqFuLPRm953PlgXEzKDsmcEqtj5PMO4g2sJgt2yCZz
JxwQm2TIV8390L0gLpI4h+GaGaPz1KTtkUe7tz8IDql+sHWOiu6pRWj9kC+y
gAuW/w8PW4kLsedGC93+HrKTN3wGfFucnrF6/V6uYRuDuYcXHYr+m/jciV+s
264iDsmxuD8aE3mXhkuKRxbFnMTc06r+w2+NDZJ8bPJp4I/YKZVHk+yQCQkJ
sfj8RlbzShxSedrD80M2Rr96fVD5Lj6YR4+dLyfMIbMcbfiJxkq7DlukckWm
hXE4ZNkYDgfkGuvkoBfNhejBoHsTP6f158M+j8XW6NsUlRslH/j7/nfsj3Yb
rsMumySwy30IHLIJLJeMqTlyUgjZtcnXLnq28Y3WjS/919+OGscZAt6f0O+x
eUjqUz5jOaRs73BI+17l73/t8lfdm1fP1MrXYRz81fufkPPz7dl/zMc71vOf
VDtijsv/r+k7AmMu4/zRzx2Xn63+wi7p5oLkz05ISIhBb6z4bG4t/837aFG8
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
/JfdPC+qTl72JNFE11Ec0vn3/r47on0yKdTlaeQjof3ofLPG5ujnZjeF/L7w
lqo6OFWgTZcu/NOJ8UIf2AT3H8w76LtsjNgQ+Z9IGwc01UAXiCeAq+m3crz9
Piy758X5UOO/l8Hjsacubfy1O7Ox43Kwv1TMUV+TLa9fO+05JSEh4ZMDPFL4
/MZWht6YJEizdki3tj92URehbPxjbhf/udu51vX1gW62qGuNNmRdW6RtDxxS
y/38GUE+YsVGWtteFa8Qry7SBrIcUnlFFnsmVynMY+txJ12jPk9brGMIfh9L
24dnzGkYvrXaeeOdq6jetZ+jy++qcxXFwMX4sOtwkLp55yG8fPZwpGZ2myAe
UcAGSOwfn/BFZzf8+UEOa0+U3fBff2u/NqW0wdHChKupD+u8KxTdpybvNCHb
LvWvh3iifddPNsiEhITTAmmO67fGp37MjcONzIeCf7toDCyaSy0vakvbTpid
v9J9/SI+Z5V22lwgLbfa21YT0UdVfLydg7C5qm51aD9xSO2jnAE/l8fy25j+
K7OXKtda11x1rJPKu42FOOT7gC9b2jsxx7HX5cey+ddc1QfUmeG8sfnfuu+q
gecfn/bE1q5pC9Sm3Opxqrr3W3qIgDrbtl4l4P+GXU35LFYDp8qeaLmx/18p
+14HtE364yHUrVc0DojLdLHeuyt57rVsjtKBHHm3T0hISJgWlGtjx6M+b8zt
lP2cbtW5ObOc8TV/vsQnTAyjPy4yh9gc62y8H8z77DNOjueTzqbLr6mzD23F
1067rF6QuBo8y+dxPqerOoe0gTgWnLRODgXb3gjw3CqoX6v2kY2zqS1SNffs
sqY6RXX9flV52SfNeW37Y21Z8Cz2K/Lly/7mamOfQLzq8eGGq3l4sDvQmLH2
QnzLjidu3hzijD4vRCcHv7Bq3IyjQe7XcazKPyvjc+rPsmdG9QpD29EW2aJ1
LJbNbXe6CzvtxVGoptPi3TtuLE58MSEh4VTDtz36nDJ/B97KNW2/nH/g8nH4
JHfbjtM3ne74YEwkH4blqvk2GLM7I9o9o+N+fGwW43+T/Br5msXvbEznX/Yv
FMZF+n7movkAv/c4+at1OGRmn8yuA/4Jb63apyonpwz+XGs1a2K5QhN+NGlt
n/feZ9k2sct91NHRPAkOeeXSl93tO9eGeKJ44cu+j5nvs/f/4HS8tS50LHzD
oRo9oI7dzs9zkd+77rVxzjJbot/2qv7W+xO1Yibx7BH/mI/DKd4xISHhlGJE
F0IxkH2fdSk0ts3vD82d0o0MjcNwSHgjuiD89jkZ+o/ArmP7o2fr5XPEq0Nn
A/PrH1bZHrL5ZeBnF9eryqux64jJs/otI3mgJbbHSehx6z5MI2em6nrq2KDK
6kFPmkM24Wx1bZ9FfSXfdlnbtE2W7z1eDszzn7ZcbMDa8p9dzpW44vA5j53G
Ajrd7j9ZoZGKLbLoOmL71o+5pg3k0kiPpw78mohl/J930Z0Htyf2bMVAY2vS
7UlISDjNsD4SbIrnbq5m6/z33/73ES3y/r4LO4+cnRHboux4v756mI+Jj55l
n348H/PCakmN5zIexL74wOGNa0uXgvaJWNuD9U+XxUGWgVxnP++iCpOs08i1
jGNjbIK6nNjXa4rFOBwy2j46Ye3Gcf3+vO/As8dt5/XZcw74sYu28fUWyuJx
Hd8c87nmGkNxpS9ePCh9xkI6jNhD69Qo0nsgueDjxjrWOa+ApqV0MJINMiEh
4VTDq7UqrUjZIodyafrj2er6Yr69W97XLVeejXSs4VQaFxmLt57c6M9B53Nb
o+YcP28bzUnplBflfKB3vDL/fe04SB/wUJ+vWu0b2Rzxa+t7mX3S6aEXzOu+
DWaSHJJ+a7umThXqXE9T/uiep1cH3Yf3bkz0Woq0mEL30bWpJt+I5dshfUP0
WR/9su8w7nXiw/ZreIdQ9U4nYMPc2QprEMQAjSJ8xEXPxr2N64XthS+2ofMI
0FL/6+1rpbk2MeBaeDZoF9dWtX2eR5P4Y0JCwgeA3BZp3nuHYrj7sZHWv33x
5uLQdnxSNxF7JOPg41/uuHoyskUqHlK+aYBtw+kq7684Pqj8FqDat8zjRVqS
xPqvr46v9825aYtskG4u6nHXKrujeGQo78avZ1OENmvUWKhNMXk/bWJc33ws
p2zLl12v3szp6Svb7nHbdfXi55Xn4hyxHPLpozt57WfLf/kv8zwCfOJ128mx
4GO726MxkeoPvy9C97fOPWfbP1277NC0f2n32sEjl3tzdr1TGV9jNSCTLzsh
IeGDgPJmDCfM13n80ULb5dv3jnNhdWAjgP/BDcmzgZcdP8/qFErP2+os+ijS
UxTQhfTjH8cF58QfX2Zn9JHFQnZG6tnI5+fr+dg5bFJ2yGnEQoJJxHeGUIdD
+v0fw7ma2EfrxlA26atJ5Nbgxy5aR0wivI2YED1TVf9L18cBO6GtBVX3/Ub5
2S4GtMcfy2IiQ7Ulm4Jj4FvmfPxXx9U1F588v1F8nev7e/m4m3KxExISPjj4
45b3W7URRvQm+t/R/bHjN/kwyr/GvpjVrjnvPrHVAeIlX72uF7sHh2yTg6nN
NsemTNtnlKd13LUs9utwa1945Yrx3Yf07qpguWnM9tInOu3xkE0RwyFVc477
KW0lFz8YyS2k4TKpa+DeS1NJnJU8/8yH3nFtxVctDZlJtWNh/lLhOpvXcqv/
DFZpoxb3ZyfPyQFN4xjon/KYyCyORPeu6T2U/znT9Dl2Pnr8BrKxNgUcMtQm
lpGP7TTFQ+NwQkJCwgcI2RjJuXE5NSH+CIwm+cWNUTvE/P6cG4upW+Nr+mDr
mLkXHluLgA4JfvC25lLpOVsOObfzfSl/tNzQBzxSPFR80t+mypddFXdZvG9n
qD4z+Onl/db6qggnxSGdxvida/H3tkKD6aRBvCz33udRxHugWYD9+uB/rndv
/+1vvf9GPB+qw8vQg9y4PdNdX4mLp6BNuxX9qPMXPQf4JXh2rz6YcdwMVLXZ
xs3ybgSX5V20lftQk58zfoXqWNdBSBMdfclvVztDY+iQ5lpCQkLCBwrr1yZv
pnBbT1PSjpNwxixvO+No5NRIO5E5hXdz9oNHxozpaPmQiz2J+Z122Xo1ZbbI
Mg45PG9kWuPSDsL+hJ1JHJL5WXyRT+oss9yeCzua+iuORw7jJHzbTTlkXZsU
HLIsj7je/R7+rNtuuDq8r05+tOrsVG1njymN67buFXUN2+rDvL399hXZ1/GD
Mw7wvBfVZ7TPgp/XbOtzvjP20HE05evmTi/eOjc2j2SMsdq3X9/eHcSj6x39
FIz9CQkJCWOj/05Mzja5NM4W6ddF7EP1bL5fHx7f4TrKXcEOeWP/grNpWHsC
tkiOMbdVPhdvb14L5tJwDiEmn6VobNcn/NDnj/7vGA753rTPP0aRnVG5PX4M
mtVY4TixHFbHkp89JqatCcaNLaiV4/L6eMSO+7Rzd+j3uJwrRqsJTUXeDawO
QWXbIzlk9izWu44YffSbV89U1sYmFqAsxxkeF4pphNtNKlds9ehK/i508HCx
8ppjtbbgkfGa+JlOJVxy3GdLNS6H/NfKb5z2uJ+QkJDQEkJa5MF4nb6uJHzT
HzPhLtgf4Y2qVU1ujd7HGVM5RlXtB/JofB92cYxiOah3aG09aKboN343Xyty
9uEP3ctbc0N5AcylMZwM+0tMfKW9Bo7t2xr5rfyEOhzS9tMk5ndwUr5s4Wj3
tvPHwlnWFy52l26d724sX4rSqhGqatHE2Cd5bmK1vnW8Mv0byxn5Dp+LrQFe
dW3EkqLnA48s25fYxTKfMes3jke5ost5MfyuTfB/ULxjbH5LiFf62zTRA3Lv
Afeuj5VnQ1vu/o9OPsbqHXza431CQkJC65DGj2IhQxyy748hr8bOvfCnteNb
Lo8GoP8oPoN9UnOrX5sihNcvRjXxmvp3y2p0wyGlE6mYRjhkmd2wCnafi9d+
FzxWmaajtFFsjmvdeYvrmMT8Diapd1k2l1NrRd8fH67nsZJl/BAtwap6MG20
zz+O6l+Xccg2630PcsWyT+IgycUmJ61sP9n8iv4jvPuFdAfIOcFO1+Y9hqvq
eaddOr+eN7+P/f7T76I4mXH0kcpqPhbdD+VroRepMTP5rxMSEj5qiDcWad8a
vXLZIa2PyfIk7H9L/dgmYiXrjNmLC8M+JMtHYzhkrToyfTtklf0wph6277cu
4pBlvNDyTPJEXtTwn9pranN+t8AO2XQ+bsqbQlyPOL+7q1e6R7vLpecL2fbK
uOPjZ3F8w+Zq+DX/4K6s39+eb11zMgb4sGM1wJvoOALqJbbVXu4T9sfsvz1s
9+R5s3GFTZ4l7tO4uuTWd19VR13PBdrlTk9c7+XJ/piQkPCJQ7o/cEj0xjUf
Y68YcKTMDqbc7Bj+ZbFx/3Jv7sD+kPm0muaZ2FqM2ELxkTFX2fbg114pqcUI
lyur62zh79vEDmm3q+OvFdD6+WvfjtM2uNfk+I7DBduyv5GThM8WnrYy/4Pz
d8Mp6TP5vm/Pf9999aL83sH37PxP3Bx+5Zhc4tWDR0P7+jh4sDiR+1DVru3t
1QnXcew0ejb1DPjLlEcTir3cfzAf7UvWsV9X8Pamz2CVLVK2R+J40fARZ9SY
Oe2xOyEhIWHq6OuRMy5+8/133W++/r+6n//+f+++eb3XXd+/2p1dP+PsiNeu
feVya5ZaqKMiDrnb19ar48vO55f+nFo0t7589TcHn+vV4b/WDjn34LtSO6S0
aDRv8lu2mHFiGmnD0bO/jt3nRZBvcZw6hpPCy2cPHY98fLCaccnlmbxeIn5d
4igz+1n2DMBB+dzanHfcmJjHncc7Oa8sArxVx4DLYvPTsSwOH5683hDXV5VL
0xSyvfIuVhQXW2WjGz3m8YgP20J64+PGHbTxrBbFlypvhr754U5nUIcGFOQm
JiQkJHySkK+793l+YcHNzS+f7zgeCeCU3/7xP3TPnfuPDuKYArGO7EMNbHHN
mR9/H5w79B0bIjZF5nj9Lpvnas2LHqeUPUS1ERtzyIflvmy2ZS7Wd9lXx+WQ
HANfNnwU23Db+dk+d6iq6zYJ1Dnf2x63wyYJ7HdslfjD4cRwTXS4ryz/qXvu
wpnu1s4g1o/nY2fzpuOfxGC6fTauu0+W8cnzvLL4w0isqB+PSJxkW77tUL9j
c4U/0o6mdsJYFOVlY8etc39UH7XIp66YSHj9JHXYY/Ckcy/II6VVrlqNdqxM
MZAJCQkJBibPpmqugB8C/NLbm/NO85Hl4pPimhfP/2PON7/8/P9wv1+2GG9V
Ohd7HBLOFarfHWNfqWOHLIqRrFuvJgT/uHDJtvorlFMzSQ4ZOjZztvTiY2D9
2bIbohEE4ATYEFmOPRKeAL+EV7Iddk1smcQzPO3ccduGuAzPEfwa3sixyB9n
X7sNbS7LvR63H+GNcMiQTbRthJ4D/Rf0rhfd7jeHpbVxFhZna3PvmLraTWG1
IzkueTPi9GeWdt3YGKzRkJCQkPCpw+RrEw/Z1rh8/fq3OYec9PxXNPeVgRi5
qnmsDQ4JlJtd9zoUV+ZrT/793WRtUicNP996HH5wbDSk7HHgY3DIZ08yO3Qd
bUg4JLGY8Dk0Ip0Ns/ep95VJxgBcvfh599KFf8rb3RSq5XTL2cu966N2wOpk
9CFD4FyvXjfjxZPoa+IiZY8k9hLbq7M/Wp914o8JCQkJYZjx8ez6+LH78lfJ
BnlSc1N1u+ptD4cUjxOHZFlZPcMy33Xd8+s48g9S+zCrzTz9vvTR1tzOcari
F8d9BsaxD+Lrhm9gy1QcgLSnJ9HelaUZZwMd9zjkR8Mf0Xf11xFzSa5L8f4d
h3Fs6f5zwvnqPDOMKaF87tb6ufeOoBhI/NjAjYk9Hvn5jfuJQyYkJCQUwRsf
m47DP/f9euiJA+yQAP/3OLq+dVHFEVQTpyo2Eu5GHKI4o1/DuS6HxPYZ1f6+
fauNnJw6/VKFNnhiG7ncVdcxSU5n206uT1t9WwR88dg/D3ZXJ3J8d47jDacR
WbT+lnln4j9TN644hHFrD7YNrh8eCXec2+4M+7BTDk1CQkJCIT6bW8u/P3o2
3lj85tc9V5cG/xi5OeTZnP3u/3XxkuTa7Ebq3E0Szt7wZjeveR2zj2oW2mWy
UYYQ0gVvYl/D5wqa6EqWXf9puAd8NuFeZfyQPiaerYpDFsXrxeSnY6siDtLm
2LSpc+QDfXHVY/fRFnct07mBQ1L/RjEZ8omXxTxWgXbzXjnpXKE6ePRkt7t4
906Wh93jjZ/NrmU2yFMwRickJCScWvCeLa3x5fL61/iTrE6jDzjk2tKlkeU3
/vpd96uz/2eef9Pm2N9k7mYuJM4QmySfVfnOa7f/u7ML+svr2CE/NEw6R3sS
vKturvTtv/2t++iXuNg8+TrvdzKeSv0Yey2T6ifyxqf9LAjWJtlGXIVqLHKs
0P/rpLCw03H2x29uZ3UMUw52QkJCQg14/mziyovG2yo/Fjo/qpErHD1bzece
uOT66kye1z0NYH+UrVA1bfgssvf42ifSDPL9zTZW0vq+6+qYtGl3HAd+Heg2
jjlufZsye24T3hvinDFtxA6JP7sNrk1spQW8Ud/RXK+6N+OiTs1L3iPr+rLR
gg29py3eOueWoyXZtm5VLBT/+O1qx71D23fqhISEhIQImDGTcXQcnza65Oga
2nkY26XlWrJHzs/9sdU6a0VAy8VqmVtboXJWATVuRubMt8MazMyfNj5MxyNf
QT5vccym7bU+cXHTtvukSFc6BPGVSdnbfM4Grys6V1lcqXSCfF4YG4sqqEZ2
2TZwSKDtfB4I93NYDINcbz7LzsE7DXk80sby382m8Sz8W4M2FNksnz6642yb
5Pz4dRFPCtiUsUPCIfFjf7F4kGyQCQkJCXVgOOTMvWYaP/Cn+c3zjkNKY1vr
bP0K4craV93/+uW/y7XMLZfEbsnxALktsW2wXMRqReqc8pcprgtbIfvwGYpj
dDamt6N1PKQfns/1Rm+HNsP53lVo8DCv4kcP1dop0jGfHm8oRhNeWWWXbWqr
hDtSs9Aen2W+7bLK3x1zTegIkTMdsy3vKU3fKdC51Heez7/st/sc8N9s61mo
C/J5rs9+7eItwTTaIKz1nptc6yzVMkxISEiIRwscUlxnZv5zB+pri/+FOGSu
vbj9Xffcn/5T95/+y//a/eKLf++2X/LyVeq2Ba4YsjvqWPA2tJOlvQik2+Mf
i+1Cc+w4MY/wTNpXVL87xB/HsWuGMC3eAGJjFtmuTnxjiJuS/2LtkOKZ+o7N
UfuJD/ocNpRr43zZh+vdN7/Vu3b5vmPjG8jJpu4O3xUrEeKttn3ki8XGF5JP
szOFXDfy7vBlyw5Zpp1/EjVt7hz1NSETf0xISEioB6Nf8fXt41ynpw5evT7I
Oc/lpS+7P6799+61nYz3xOgpXt38g+OSaAENr6uvjwdHzOx7mY3P5lDXsWsC
bJQ+34IDWv5ZF9bfHZrr5cO227Wdp1PGIR+PmZ/fBuANMTnWVXZAyxEBsb7W
Lsn+650npcfxddB5hh48XOiuba477ubHRPJ+UMTh6vIhOCT+bL6To1/GtdQG
xVQQa1Glq0h+9NHe8onfX7jr9bnzeS3SmOuaJL6+vZvXfZ36eJyQkJDwIeHW
zhCPXH1SfwyWFjb4/u5y948La90v5x90Z+7PdZcPZ7rz+z8422QVl8QuiU2S
3Bs45a6ny9gUcL4Ye57vW+a6XF0SM4+hDdQkLgzg12RuJ/ayiIf+y7sj5+sG
fJ/EnDlNO2QI5DtbnsZ3+FYRf/CXWx5XFDcYeyx/Ge2wvJPjw+2Um62cba2H
E9XRvimL/6S2I7rmtsZjUf/tPsnsq+SoxMblwh/xKU/jnmP/pJ8mqR8eA94r
NP6h6TP18TghISHhQ8OYeTXikFe2L3e/ur3jAIf8bu3eEEdc7XGnMi4J1yRv
Gz1Jat0QK5nlcY+nJYcNp8hfzfwrXyD8zuYAwCn9vOxxNGnEb+raQ4HiNtvQ
QRmXQ8r+1mS/sn6se0zfD201BWLv0/sG51dOTahOY9uaRa529tWvuy9f/S0Y
P+ueDa/muP1P/RqIl7Ao04cs6qdgO8fQjJw2nK6Pqf2akJCQkFADXhwQPLLO
GKyYx3Mb60Mcks+rD34cslFevHere3P38tA8Rwwk/nBrk2COvnbla8cjP/vd
/9a47ps4Ych3DC8L8QblaBfN2eMCDvn01/r1e+TnHpdHtmGHbBKn1nZsWyin
u2x9EeA/xKaG9M9D/mrLIf19JqE3bmt0x6COXmmsHbBtnzK+7Lb7qQ7Q9NEz
883yQTb2JQ6ZkJCQUB+eLlrd3BrimYhdxO6Yc8ilDHzHpw13/GblofsNl7S5
M1XHhz+e6XPJunOF9edZ3qYYzpH5uh9Phs2waN4elyc0sUMK8FubM9QEdTQB
TwJ1+EmbPDTmPoZiMsUh/fbbbdvgXEe7yy4e8tKFf6q138OfFnJf9q2KnP5p
xTXMzc+6+jDTODeAQ5KPfW51P6+NnXzZCQkJCQ1Rg0P6tgt+k0MjjhjikT42
j3cd76yjLyy/3tPOncpt4YjoNlr/NfPq6zf7jhtiewrVJVT+q4v3v3Ot9twU
YyMc176p9jWNl/Q55Dh8p86+VdvG+Mjhab4Oftk+WkfMgm9PjPGnh2pwhzgk
3NaP6Rz3XYPnj5rZoM5+qvde51lAg2CcttYF9cCnGZfL/Tq7nmlD5u/QyQ6Z
kJCQUB8BO2SRvWf16M9BO9rG8WqQK4bwxdJBd2azefwU9kjsklcvfl64Dfxx
oK2YcTbspXDHIjugzQ0CfixkW3j25J7LKTh8uNTd356vvb/V/cEfX9euWXfu
LuNaIY5VhXE4q+WPRecNcUVQpDf+7NfBfs8CugR+e9GHBGX9o3cU7lNZbcAy
nrnzYLF75dKXE60tfW/1St7eSZ0jBOIwVe9wkmAcCN1PnoULG4Mah05b3OQW
JiQkJCTUgPcOjs5PaEy+2ZsXlwL5ntgx4IY+V9S47L575yw6RxWw4xEj9sV/
/feOS54/95+6l+Y/y7kVcza+aPEsoDxo9i3KiVbeiux8ZRwSXXRsKTmwTXm/
fU6h7xvLlxyPfPbTVvd5DxzroMcXBHgl/BLwW98B13154QsHvmf8sZ5ds4xD
VtnOmtStOQl9lhiQe0KO9ft3A/4pPhGzf557VWCHHNzr4eeJ+IOiWppV/eY/
R03uWRmmFddAPji1aiZ5jl3zfx4sz/4r+LJn7nUciAdP9WkSEhISxoBniySv
Zu1g1Ke9VKBXeL/zyO0zwhXJ1ynR7sWfNLfVaVxjEVvNxUv/uftP//l/6X7+
zf/dPf+nf3C2B+ZV5m5bO1B50Q9/WhyZg+GWWVxnti08dH71XOF5FZ9ZBTgA
WjDiHfBA6uCF9FrgkuKVjmNa9JddWfvSgWM9M9tZnlkE8dG7fdvTpwL5lav8
2GXw7fL0Y9U5sWnKth2qpVkGatTE+rDH4ehtcci6/bm29ONE7au2jmlWO2vW
nW/h+ll37s7+anduu+PyaRJ/TEhISGgBHt+D3/ljM/o8IDRnwAODx43wEcEj
x5kz4Gkzl37veNvcg+/cMj6BrWUN0PqpOh4c8uK13+V1sX3AIal7XHWcMn75
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
ZFNQMyw13MM6TqPQn4kNa79FcuHIObzynVcrM2rOleTcNenTLLHtot9m5vlJ
1CDlsyUckntTqSUTjx/93QtvFM9IwP+cA9Ob2XMavin19LxPtMhBOaT/fWdy
aPXfoY+rYeTwuWPeCL2PBkMhRFvMg84F8/je7A/3a3PIH98d920XDnlpdSd3
n9aPXg9c09yInz1rx69GDTQVX3OEJ8IXff6ITqlj2+K93Gq7ic8QXLKrzyJ8
dFTfs9YipedLXN984uMS9DquamP0787XsHLz8zTHacFJTyWUBktfGfheXl2N
r0Hz3dOrnHxI/vfvX1gPr8n9hrv/lWPb8niW3pdonq/ybidWPzY41OGNxicN
pwI6J2tlN1P/0ld/moB+hlVe45pDMk8X+iAXgPzI0XCzo05j2VITPCzNDh5J
ruPPzrvk5DuAN35x4V8ytTcsI9olfJL3tt5uwiNH8500PSbVce7YUzr+m34x
Ol9w7PiW/Oa8311pvFPnXp4Vf+zk3hYtke8WTx7q0oVLcr7n5XFI3UydcwtN
Ms0PaMPtCt5TOh+qHuNWzzM5GIQ3Gp80jDWS6yc1L5dWn0XTT+85+MvBLamN
ubH4/6K787ej+6uXsyjgkMzFbfZrZnM0PJKamkG9vEMAnoonJL2+icnL89tb
8+nfxPjku9DekW0wrhwSr5aq46S5RB9/PAt8axKRcMgLS4dOO6RfAPee2js8
73yQ3kB1/RZcPFvXuDc4Xxyvp/ZH3aP4/NF5oC3F++5/vkzc287TU4dh8Ebj
k4axgze/ff2fSyd5dyu7KW5tPnKPd3e/LtQd765fjB6vXnOY37oebTydcSjd
fsm99ig4CPxR/BDbgDogv9fxqAA/qtp3eCbfDV4ng2yL+Pj3q7eDfM4y1NGU
OE74e+Oh484tqbcdJ/3R0AzKewf+hQbJ83DD43eHCY/M16hFk66rRzq/yBZa
pPigV0E4JEBPzfBMi2+fKoySNxqXNIwN1D2u8EWfH97emXE6JBrlfVXf4ePe
zhWH2a1LDvDKLxebX6up05b89i45F7XYf/z2wv2NBrm1MTsQN+J6hCdSCP5U
pzchNad8L4PUZ6fX0v/4xyCfU1/3/e8T/Uk0JX8Znoc7Ok8cOcftejwxEA4p
nOvy6pGrl6mcB5LcBt3fpgoZLbJsn+gxKX0mK+5RfE0SfzX6DRGfl9fTZUr8
AjLLGYIgNHfMG6GPieGMQeuRi4cJV+zniPDLPI5ZBrhnX26Xzvsq2Cd4ZNec
a2X+putPs71x1/mLo0NuLE0H40Ztgbflw9mLtZb1vUvaQnonhvi8wg91DBJf
HnrMUHeNRz39BOGV9MEm7xEv+0wM0HTHyULCq0TH070Lq0Cedh7flHob+d3I
vRc9E2WbLj5dtD+iGxYto9AXv04At4VLwinxnE97QSSf1Ufw7+GMIjRHbDJC
HyvDGYCXiw+PJD+yCVcsAl5ArKtw2xXXdq4L1FMOykPgFqfBU7wONpZHz3uv
X/tXlxdZ1h9yWJCYpOaQ+HKLRzh11jzCK3l0fWd0Ta3lk00elD8m2p149dT1
EvX5JvcpaJlwO3pu7755nPqUg4fPXpX6jhc9L1xPan7A9/8V80e2l7c83PHF
29h/KOWKVmMTHKG5YBcj9DE0TChy/JXhkV1wSJcruft1+fZL5kfqa+gFhycL
j3j71b0uaOB3WHZNwYfxNPhFop0Sg29yvRwUwt3QIr8890+dcELqYdrcG3Ct
JweV72pt66S/Nbq17nVttQiTD12LPqifw/WNk/o/+B7aI7VoUp+DdlnmQ685
pNYY4X+8Fz5YpD3qZUVXZZuOt+as3zA6hOZ8wxyhj61hAqE8y5jLimLabeC8
xcu2XRHXlr+L+tkQ0yzjlwAtsgtO5fdMGyXI3/z44SDlYqPc9uKj6wP1UdRo
0ovcX3Z2K74fePdmO5pdivv7oUlyfrje0qY9ng0o327+p1dCm3ORGLZeL3yP
Ptp4adFHMf6tHUUXF/dPeKS3Lz7HQ2MkHs0+Zdaf5PJQc6Nj0j7vJKbd9zlD
H+8zgtDcLsQIfcwNEwR17b2yttkZhwRTW/MZPphBzVhNEXejBqeq7wl+kKdB
aywCceS9rYfBto+PEPHsELF0jdsrG67OWmLY6XlrOY9nD9ojvncONLk30XA6
Y7JO7VkuOiSPae+asv5A6n+pt5YcSXijoKruRjRIlnM13nZuDxWhOdw4jdDf
heEUI2eeGoQz4oX9y8d9B+7reU6vGz6Z4ZQVPLKsH2Kdawf5kK8OVoJzwTag
JgjuFpoDT0/9+1D8IuvouuQqoDeL9qjPW9NpzjDIU0zqWDgPOFfQ/tAT4YN1
eSWaoa7XpqaGvEj+RvN3OmRyvhXNVZrzicZYxBfLeGTaJ7YkB9MwGEJztdMw
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
f3TRIVOO1hGXDH3sbdiwYaNs/H/g/rjd
          "], {{0, 334}, {657, 0}}, {0, 255}, ColorFunction -> RGBColor], 
         BoxForm`ImageTag[
         "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
          Association[
           "Exif" -> {"Software" -> "Wolfram Language"}, 
            "GeoGraphicsMetaInformation" -> {
             "Software" -> "Wolfram Language", "TileSources" -> 
              "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
         Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
        ImageSizeRaw -> {657, 334}, PlotRange -> {{0, 657}, {0, 334}}], 
       TraditionalForm]], PolygonBox[CompressedData["
1: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
wjzNonyAG1k+eE35Qdj//wE31a9s
      "],
      VertexTextureCoordinates->CompressedData["
1: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
x8L+dEP3DCfP1TQvkL1nAvnmPSDY87ySs8YDdCzLokY+9YCqNuzk2egGdk/O
GUsK98JWla0+PHuuwrJ73rzOPqy6F3hdlR7pBOLrL+4o6u2FouxPdZlaF8Di
XZgIj2ofnJdbfcXM3g42x6s4WSf2gVT3/Ez7Zyson/8T/GmuD8Lwv2vKXEwg
eVJ1QMiqH8YKa5Q8B/Thd1bQlC+uH95/wWeShE/Amxjdw2QRApRPX8m7OHkE
CKcU953yJ8CTW2JHpmKUYAf3J51CAgEE9pha2ttIQqWl98x2VnTMa9yoXL55
PfC85SmKfTYAPZG1zW6/29X/LrB/BgCcogUPev8smd09u/2APBHx5JYKbhcb
Ihrv8nebxcsYIpo/tptK6S4jovXfHuiy5v9BRPsLkSwNPSI+iPafE2a7xl1/
EJ1PPCi4JDVoEFb3/jv/9b2kE805g+h+zu5Wc50dHAQlhX/35z51cnT7OhJE
5P6734CPFd46R0no/lvz9Douu5Hgh+q/9yG0PCuKTCWh97tyyIj4qpWE3tcb
v3IFjouM3n+cZsX4pkiGHZv/xUf/nZ7jBDsy5Gv8i5/gk7xttPtkFF+0NOcz
zAoyij/B577ujJ9kFJ8zx9Pmh7YNgSoWv/nqem+6DIZQfOfq42W/BA+h+F//
4/apzNwhlB8ZFTnF90hDKH/iJW8rO66joPwSroOgQ0cpKP+EBX+fXOJGQfk5
0tZgXJNCgQosfyOelZsFt1BQfh/1wK/bz8nSSVj+p8rPqAzIU1F9aNy8LCbQ
horqB69Dc92mGCrswupL3buNL1+XUkHo8L/6gwu62y0zRoWnWH06RmuSeCNK
g1msfok3Ox8WOkODEKy+qaRSqQF+NFT/SvJftvZm0FB9lG7iKJHpo6H6WZpy
2N5tJR3V19aTcb4ZynRUf/W/ilX1XKKj+mwTTp2Ye0JH9bvrPaF6XS0diFh9
X2ijTghP01H9X61Zc2DTzmHUHxqeKJxcbjyM+scqgTIaPWQY9RdRqV9finOH
Uf8RoSqnBg8Ow2msP+28SFJUXjOC+pfVqe2KZPUR1N+axITN/JxHoBXrfyua
Gm1WJI5AFNYfk/i3coXWj0AD1j9VW4i/xmZG4CXWX1+/KZk8uYsBxVj/hX2n
Ch8bM+AS1p81Iv7+ag1hwDTWv5seylyaz2GANdbf4Q5/nSCRAWFY/39/tUV2
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
       "]]}, 
    TagBox[
     TooltipBox[
      {Opacity[0], 
       PolygonBox[{{0.24125770943371944`, -0.10491015237220415`}, {
        0.4020961823895322, -0.10491015237220415`}, {
        0.4020961823895322, -0.18976149062141845`}, {
        0.24125770943371944`, -0.18976149062141845`}, {
        0.24125770943371944`, -0.10491015237220415`}}]},
      "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
      TooltipStyle->"TextStyling"],
     Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
      "Tooltip"]& ], {{
      {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
       EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.06824297863215509, 0.0764865812402965}], 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.29223373348051784, 0.05426929998677121}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20893551070585586, -0.053785523342779355}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01714780580307723, -0.12979519725242902}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3177252773073114, 0.042277735895095855}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3177252773073114, 0.042277735895095855}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13359387187351401, -0.12967915701628205}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3126803610885161, 0.08013322119830961}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.31304036156836934, 0.037404596472272816}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2862427999669352, 0.17421440508463804}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3038118307078299, 0.05146969676077181}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3200142220257273, 0.04092603057553647}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3192120306677466, 0.037069043786744735}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2932180368683226, 0.054978324903483484}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2932180368683226, 0.054978324903483484}], 
        {Opacity[1]}}}, {}}, {}}}, {}},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.754852299999996`, -98.89165845}], 
       "LongitudeDetermination" -> -98.89165845}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.754852299999996`, -98.89165845}], 
       "LongitudeDetermination" -> -98.89165845}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  LabelStyle->Automatic,
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{{
          RGBColor[1., 0.607843, 0.], 
          EdgeForm[{
            Thickness[Tiny], 
            Opacity[0.4]}], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5]}], 
          GeoStyling[None], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.0254944, -93.6275937}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.8783374, -77.1007034}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.7629088, -84.4226745}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.3071816, -97.7559964}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.8667016, -122.2990661}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.8667016, -122.2990661}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.972754, -90.059011}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.0093755, -75.1333459}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.6661505, -121.8782803}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.5369506, -122.649971}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.5665924, -121.4686318}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.759881, -122.437392}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.5603104, -122.3106003}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.9041485, -77.0170942}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.9041485, -77.0170942}]], 
          Opacity[1]}}, {}}, GeoBackground -> GeoStyling["GeoPlotMap"], 
       LabelStyle -> Automatic, PlotRangeClipping -> False]], 
    "BasicGeoRange" -> {{29.972754, 45.5369506}, {-122.649971, -75.1333459}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> GeoStyling["StreetMapNoLabels"], GeoCenter -> 
      GeoPosition[{37.57120884625905, -98.89165845}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{37.754852299999996`, -98.89165845}]}, 
      GeoRange -> {{26.86562571458333, 
       48.64407888541666}, {-125.02580225499999`, -72.757514645}}, 
      GeoRangePadding -> Full, GeoServer -> {Automatic}, GeoZoomLevel -> 4, 
      MetaInformation -> {
       "Software" -> "Wolfram Language", "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-0.40209618238953176`, 
   0.4020961823895322}, {-0.18976149062141845`, 0.23449520062465298`}},
  PlotRangeClipping->False,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{3.707219751634682*^9, 
  3.707219794770912*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
yDRNpGepMpdnV1R3KZIjQxjycxWOF1KUmByml71RaVO4G2W7M52jnvEpus/n
RkkU0KzYamkuSXnEoZXUz4NsPEvsi3hZkrhYO3DxaIpG709jbYqtKYrvaqwo
JtJHVL8vHHuVn0uxZWUztl5nP1umG1GDu/lUv2ik9J8cI7qUbHwcH2XD+MjY
yVNiJzunxhmrZoSWvjWWg3hqbTqqbdHcNof8wqqTr8+to8SaJyZe01xjkt8y
bdjfw3qLZ4J0YdX9Q/wG+++KI2dxuWAJofXltDyFLOjo8CPpSYJF291it7Ft
EiAQfO2/NOROFfW4Nug2p1uPd1H2f/hllpWxvx7i5/hvOlyYDkgfqxU2eeli
fKVPpOaS17++XOIbbr/Jjzseb4yXvy82RqvrFbYc8LQ16kmxNxvLUO9EnKr1
FG3x85VFwxmioACZ9V72zk/GUsJnPx5J0rORKUpWMnwMiGRN3JH2I2omY226
i1K/oV/lNEV+/ZdoKj5FE8WyGMQbSN9K0FQOGtwUOhgY7LCmI6HyBv3xR1H9
tbpZE8yJMBWOG6qPCmfY6FixLqK5t2vQ+C4b0ZX1WaqtTIoRDefY1k9ziCJ1
B2Ihrej9Z01mMediy/uTDCazDz0weUbk7+H0GAPGHHVMxjl276a745nmRHG7
pF46xms0nDcBHmKeb1pTgcEDo7HHlKj28P3MeSW0pkEOBgq/XUFl0HOJsLvV
/nynZaDah3nWmae6k2JXkMGREK+KFTL8bBdR8yyexFPaPPPu0IgceCFd36Om
3tNviQhubHFQGh2ixdUKza/UGV/U2TnWpUID3xvHQGVE3dbqavE4eJvllSLN
FDLUWCyyLBmu+tBS5+BwNre8PsOVdLtc9gWa+Ze/LDT38/G06fsMZ0zs4Fds
D2itbuUvyor8SCBO6PsaMDU7aAsFBl1lY5lbHJV6GAydAB7E1QILws/CL6PF
x2QMKxxvJhhDTtFkJUV92TF6MpEV+GCxYcjK1T92clV2RQomLZvloLkfwbTl
gM5IYP1kZpQDmAQ9Tw6w2Rumm2N5Sys6uUKcgv48lLlr2kHlClUWb4ZvMqJ+
SvNr0wLzf1g5fxYegC8zCKDcBLx8d6YZ8I2hu05e2uzPnWSXkQVTe6w5+yYy
R1NVHzqjhfu3sFSQcQSwNCjnA4C1+MU4qw2TyGvORlywkiLpHKFGtk2LmXxz
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
WSvS/GpRNs1FcQqG/oGfMyMCXihilMFMiMOwvRzQJEgM1NDtmq2DNK0PlwbZ
k+1GERQJn2JCewGnDH/2fFz/oYgIjjQsYxFfi5gb7ehwO2jpVagnRccJ41y3
t5gWQjVhzo+sHTbKeHRYlZoNRHnwqHbnFnkNFVC5pWFXMGjTAMpWB+VsdbEh
wKqwVfFarwwQwMdwxSCa+GNfrZ/tYrfr5Zi/w0awWfwJgd+XSZSLsld2aXFa
wgpsMwFxgtQgv4VUpmGF6rIO6ve1Xg7HQ28IKgPWg12YVe9wiHDPXWn1w/ZZ
AWRoc+psvbs28ELtUJePqf0tcGHYQXY5JUUdJXaPhUxUNl6ry2NMQmHoGD7D
ah4yneSt7MVqSoU0+XzM7oGrNT1zNdrcdIiSgvKtkzeQtvyL7+S/fJMv2F10
pqXBd25uloqNImVqZZqtYouQPPayoauDGd3w2Grez8ivrwcki20EfzCSorHE
FD0cTckGO7cis3QjkjYMJ2sfqnIT1TzlcSMsuXIk+3OWxVsgdSbeiG+AlNrV
e21dYcZV8/mDWc36fBBU2vIDW1ln7Ei0LandHBChX2bpXV6akalfO5syC9qo
0Mei+HCqcEiy0wJrMLLg8xyo6s4LcMw4FHJ6eB88k230krW4aNcCphZzkN5b
xcGl4312HIZZ3q+JsUADL6a/IK2xZ7cCE5WUOfO9st0Wnsd2RuBUcQdQlqGl
UrhDqEfmuxcAVRebhL5lhRejTABPrRB/5NxaMCVZBQn3VqZB7pniGVyNbDnJ
CNeEYII0PaAbmCHbSmWZjAt2ZfB0crJLJiEseX2vWuyH5mVUIwIXgK+ysy6M
XfhR2uNAZmurLjGXtEmiIH2jiA21pE99lc338nJBZglg7k4mP0CxxHOKz3TR
ZOyFUJz1Rkr6qrEpDAreNjfMdoRoVFnDc2tlxhs2veEK17+8bYuO29VEvhBf
hw2lNtqtiYIfRhjb4PuGrk1t6MG33JKKkzpNV4qMAot0Iyo5bMO2/JyvW2ds
EjvnCqCuDRXpzkiGbg7nWSPZSV8eKrOdBwt6NVKU+rPd3dr/y9h79MaaZmli
BM316ctkVfV02amqnm5pII0gjDDQQtL0UoD+gCADaDGA1KvZqXslSBCglRYF
NQRUZVbam5n35vWengx6E4wIhvcR9N4E7QVeneeY93uDl5mtRdAEgxGfOf48
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
F2VhYcR2rd5Qw+B5E0/qTKMxV66z3nwsvIWdoK+FDc6l3XJDuLNBRQQebSyD
gMwzicU+aIkojsG0ZUsSb/hRpU74HpqurrDy5XXEEnSL86Cphy0Zpof4oKQs
peR6VBhQCyWX7EP/WdAp6BmsJ2QEwG8pmdb4Zu/r340JHjMVyo3EMmhFAxs8
hSxtjX55Rd1T6dU/eulHa+PObJasT55cU95z0rcl/L9UZGWZo7TPx3PuxWKM
kvwxdZU5Hh5BuAPeOyT+KE2c+LA2inwRBSDNQHowUsIS41FWOCQ/E2VKFUCc
1qp6xAUDcck/7W/nvCbgzFsXif8uVz587FylziuHgEuIWgHXOdcClm15M859
RvTbl9YXXG1VuKsAWQnVw1A7H+hhBAvZIk26zvcE5Y/h0j32fDA1kll6MmYv
R/Uow2nDIpoqXcYg8Lae2s5m1uVSQ5yVHktVQgG83bjXIab12iVv/d1rxmQ/
+TZl+JVcjNmGZMCkaQyLNgNp5anqWt09Xqjz9Dym4m1KAz9jwr5USbhGbaGT
AXTC2M3NQErSKIjrxBwNTMNKkmvcS5VZOpDN1RQ9B2g0svAIlXfLez6QhGMr
AmLIEt3aJCWfmOVCKOF1C+V3CruZIs9oAKKNksBgIrk3tlUR0oaQaYt5+hEb
VIN0QC+RISEYBM8A6x7rYlFh6HXNH2S8l+v5LavnSwUSbYeD/JDp4mp5mNEY
UAKIysP5PLm+soSJI5fromI68bg/t0gxXq/LLsvw1gYdHbqWot53KJO6w/WN
CF4WckzU2NFNVQfcRJ3s+nrKTdUEjDKQv++mKlNudavSVsJEAE03rcOaOrbC
Rcg4uX7fcZlChg2To1ZoOW/wpce0X6025cZSD9zz2U/ddGrMPZ9OMmUR8OPn
7VRDNk71g0sUxAokuOjgxEXrCuwGKPVguhUiS8JjR9RgCgzRwQ+8X7TpsZ01
kl/KEucnnzCxUEiZxl78uyHEl+lW++CXn5CldEblUAnFrsrNaiuK+X0nVvQ4
ZaJfiabBVyGRONi5RAtZeDp1iASqgqJngGsRcNgGY5K7WOOuMH4P6JxVneBZ
J0NIiooFGTMd73MhH/Q2sAigyo7l6+7bWaHLBrnqp8wjLKzyzIDUEocI0WhJ
GBYCD3EQUMIt3speC+jI6iFFsrji9yUP25EtbyCVZhZTco3Wgj3RNY8gmWiS
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
+jtIjyBc2bCiCaofpQFaAcV2ePI99NAWEHv9/+QH072cSm+RA8THUab4Y6wk
RXXCMpmYYsQPVPQW5p5RIb9Co8wtXg0y+R++Q6n0An//nuZmfqJaOW5n3dmD
1LFJ7071Lw2fz5v78COyNfxPqlLRqv/fGUcHLUSTafp+Yp1uR+PMiNIyUNHt
dFTFNos0HeSZjqTo1nhc9Jsx1zKWL0u1I55TLsTo5dB39ODZn/nrf2ktNUfp
rVlaSE+wm/JGBk3HmBxbMyVREh1dDvRAZtjFHRg+gCqAA0AFiKMe1hNBmwol
dmvsTNVopVrjvzV3cOvAiG2ilyksp/vE1YAJ3wcOMBYjvGKtj/OGzpykfCQM
zZYdfLSP8ypjox1qKuaqvN679z4b6Z0e4Vd/n3dCEFFLbHDCMhD2eDENwWhk
Ig/4297YQreXCvn/hwsyVrFIo6mkzTAUmKkt85IltWBanosN/04iLNI9T+Mp
M57YCMkURU0cLANTHNFWxrdPHcZO2wnqG6v6bx678Nq9+5VAhYRDq6mc44Hz
ZtRo5a1NCPvnPXOFlXXo3dLV1PJ+v2ZfBoedmtwUXKuTExcUjag4ghO26DgE
sw1EAzaEFcbM7Ce5Fua8vZkf3TDwCpURZFmgYntkZXVQ44pOtcODlDxObUxQ
IbdI0bf36fWrW7Qef0N7tXUhBedIS4RmzXv76x5DsNQ3YrNa53AveL37KJYt
9CGtqif911aUf0Nme303naYXaxu028iQzvToWqE69Cmvl9L0bDUnIQ6otf8w
l6M7j76lhw//ix4/+oPUZ9R3+YM00rR3kGdDDu0NJvTsGGztzMswG+Raedto
pVRb+leMLv3OYdk76H8rNgizrzDUElLa+FTl9wxExdeUrsdphV9+ZadGyR2T
5Ert5ilWL9FqPUslph9nFlDOu1YcSUx1RdYx2Ig6nuDn5bRVRa/vxHJKJzno
hk+Yyi81V27Lnzloj2i3lQ/7+AxqlT7qc/QFpWfOL0izEya8wEWY0+2JZ+ho
UZw2OMx+NOQArf1s0vjXmXpeVjOzO0eF/RXabYo+sQZL6uzFj2yu0v3lDCVK
JcrvrglRAySIwtNJnjaqUZrJPQNaa3bGrw336mr+3bPWanXcyJZOaE09A4WZ
02fHUiFoc1i/cq/cDasMXEZbf1a9Bb/jRrpivJZilzk97cFYczJVH/wzd2j9
Ynq/4Nz/NMYL+MqBgRZpoMDtCR/yDRu0bLUUhisyZOWMiW95OyZRE1HrOc4Z
tm96zuTmdvRE918OUfhGIbySkLzianfelzFLvg/SxyJyggxpr8jJP9pyMKPP
f3cuQ6+TszSVfSXlFboMSIXC2ALxoymmKEt5+m50ju6MTtLdkVEqVpJSGtI8
TNNRY0vSHV1rnCuNmqVLpiMVAzvQBoiTaO74b8QFAbwEtYKZKWD61uQ9sVx7
DBcohQUJaB5rZrrMlgZlH1Eqvi+wP12SZW0eIxYxIZqZsdJb4b0dqbfPynvg
tXAdZtZWgfLBDCryrozya+KjaePfDhOuWc6vgXBVyw6DnFbuyabA9WR6sUk/
AGqTKeftnvLj3qjbDVfuxNvt//hFP5webUc+60Bn8maneZjpHDXM13EjUynk
Y7n05nSwujoZ+SRIrk1G/jp4PDoR/P7RRDC9MBm8W5vE74I5fnxvaCL45umE
PF5djQbR+cfB6PSDYGrhReS6/O0XQZyf+yI6FHzz0+PgD08fB0/fjgaTC4O5
5PrUabWWbh81M51ifaUznfqpMzR5p9M4TOE6BnB51/inTOS6XttFu1WI/Ee4
itf91g93G4rZJTpjS39+Wopo/6L63xophd+tejx64LXcU0FAtaklTmEteqc3
PnGuLcFm8X/htj10GJZsw9CppQ5NK4TrOzV+tFEdDySTUIwAM4/H4dQJ8KB+
5sOrtMu+vo2Vupo+6+VZzqbSGz7MKYZgMxf23jF5ybK9LtKDZT7pdxZw0vv+
HzzoKls=\
\>"],ExpressionUUID->"126c389c-1da1-4897-8023-95a2d8594159"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Dataset", "[", 
    RowBox[{"data", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "2", ",", "i"}], "]"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "3", ",", "9"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7072184882556763`*^9, 3.7072184929140587`*^9}, {
  3.7072185676113024`*^9, 3.7072186281298704`*^9}, {3.707218706085517*^9, 
  3.707218723093559*^9}},ExpressionUUID->"822cab8c-f167-442c-9322-\
a8fc7813f60c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 16, "Length" -> 16, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 16], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[16, 3], 16, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[906133787], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 16], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[906133787]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Adam Raty", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Mateo, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Polar Bears", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["An-Chi Tsou", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Berkeley, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Polar Bears", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Bob Liu", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ames, IA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Machine", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Byron Liu", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Claire Desmond", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Fury", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Eli Friedman", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Portland, OR", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Rhino", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Greg Marliave", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Berkeley, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Polar Bears", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jenny Fey", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Arlington, VA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ant Madness", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kevin Cocks", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sacramento, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Polar Bears", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kiran Thomas", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Austin, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Doublewide*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Markham Shofner", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Washington, DC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Truck Stop", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Natasha Won", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Pleasanton, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Polar Bears", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Nicky Spiva", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["New Orleans, LA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Raha Mozaffari", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Philadelphia, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["AMP", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Samantha McClellan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Washington DC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Scandal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1757651543][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1757651543][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1757651543]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1757651543][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1757651543][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {597., {205., 211.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 16, "Length" -> 16, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 16], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[16, 3], 16, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[41390302], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 16], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[41390302]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Alan Kolick", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Washington, DC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Truck Stop", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Asa Wilson", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Brett Matzuka", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Raleigh, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Johnny Bravo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["David Cranston", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Arlington, VA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Truck Stop", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Frank Devin Barich", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sockeye", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jack Hatchett", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Somerville, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ironside", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jack Marsh", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Piermont, NY", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["PoNY", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jack McShane", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Westminster, CO", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Johnny Bravo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jared Inselmann", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Decatur, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jonathan Helton", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chicago, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Machine", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Mario O\[CloseCurlyQuote]Brien", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sockeye", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Mark Poole", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Teddy Browar-Jarus", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Somerville, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ironside", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Tyler DeGirolamo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Bellevue, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Temper", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Tyler Kinley", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sockeye", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1245512330][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1245512330][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1245512330]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1245512330][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1245512330][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {578., {205., 211.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 14, "Length" -> 14, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 14], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[14, 3], 14, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1931198697], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 14], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[1931198697]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Anna Nazarov", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Fury", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Becky Malinowski", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Somerville, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brute Squad", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Claire Chastain", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Boulder, CO", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Molly Brown", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Claudia Tajima", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Medford, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brute Squad", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Cree Howard", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Oakland, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Fury", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jessi Jones", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Raleigh, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Phoenix", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kristin Franke", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Princeton, NJ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Scandal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Liza Minor", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Iowa City, IA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Heist", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Nora Carr", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Riot", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Qxhna Titcomb", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Medford, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brute Squad", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Rohre Titcomb", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Riot", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Sally Mimms", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Nightlock", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Sara Miller", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chicago, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Nemesis", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   1482242135][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1482242135][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1482242135]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482242135][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1482242135][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {578., {180., 186.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 17, "Length" -> 17, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 17], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[17, 3], 17, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[316380492], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 17], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[316380492]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Bridget Kane", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Plymouth, MN", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Pop", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Chris Gwinner", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Decatur, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Daniel Furfari", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Conshohocken, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["AMP", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Danny Clark", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Jamaica Plain, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ironside", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Joel Wooten", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Columbia, SC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chain Lightning", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Keegan Uhl", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["West Hollywood, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["LA Metro*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kimberly Beach", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Harrisburg, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Scandal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Lori Eich", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chicago, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Mischief", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Matt Schmucker", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Jamison, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Philly Masters", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Maureen McCamley", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Bucket", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Nick Poore", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cary, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Boneyard", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Rachel Poore", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cary, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Slow White*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Remy Schor", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Playa del Rey, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Mischief", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Sean Murray", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Morristown, NJ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["SHUYAMOUF", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Trey Katzenbach", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Gladwyne, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["AMP", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Tyler Grant", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[17, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[17, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Mischief", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   225743496][
                    GeneralUtilities`Slice[17, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 225743496][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 225743496]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[225743496][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[225743496][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {587., {217., 223.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 18, "Length" -> 18, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 18], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[18, 3], 18, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[1943641397], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 18], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[1943641397]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Brett Kolinek", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chicago, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Machine", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Chuck Kindred", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Milwaukee, WI", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["7 Figures*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Dan Gillick", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Oakland, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Blackbird", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Don Tom", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Houston, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Space City Ignite", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Greg Husak", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Santa Barbara, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Condors", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jason Rector", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Asheville, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cahoots", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Joe Iannacone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Austin, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cosa Nostra", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["John Sandahl", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Minneapolis, MN", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["T.C. Imperial", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kevin Ryan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Columbus, OH", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Madcow", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Matt Wilken", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ann Arbor, MI", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["High Five", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Michael Kapoor", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sheridan, CO", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Inception", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Ray Illian", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sockeye", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Ricky Eikstadt", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ann Arbor, MI", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Surly", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Ryan Balch", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Baltimore, MD", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Sean McCall", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Houston, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Space City Ignite", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Timmy Murray", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[17, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brevard, NC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[17, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cahoots", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[17, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Webster McBride", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[18, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brooklyn, NY", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[18, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Horse", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   891187184][
                    GeneralUtilities`Slice[18, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 891187184][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 891187184]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[891187184][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[891187184][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {569., {230., 236.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 17, "Length" -> 17, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 17], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[17, 3], 17, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[399564713], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 17], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[399564713]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name ", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Angela Lin", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Ozone", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Becky LeDonne", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Madison, WI", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Dish", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Brittany Winner", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Boulder, CO", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Steamboat", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Crystal Davis", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Washington DC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Scandal", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Dominique Fontenette", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Portland, OR", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Riot", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Erika Swanson", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Pasadena, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["7 Figures", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Heather Ann Brauer", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Underground", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jessica Blanton", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["La Jolla, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["7 Figures*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["June Srisethnil", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["South San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{220.80000000000004`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Darkhorse*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kate Kingery", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Riot", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Kelly Bolt", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Chicago, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Nemesis", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Manisha Daryani", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Fury", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Rachel Holz", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["San Francisco, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Blackbird", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Tina Woodings", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Austin, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Showdown", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Tracy Woo", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cambridge, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Godiva", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Trudy Philip", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[17, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Seattle, WA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[17, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Underground", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   228344805][
                    GeneralUtilities`Slice[17, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 228344805][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 228344805]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[228344805][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[228344805][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {674., {217., 223.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )], ",", 
   TemplateBox[{TagBox[
      DynamicModuleBox[{
       TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
        Data`UnorderedAssociation[
         "RowCount" -> 18, "Length" -> 18, "InitialType" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 18], "Shape" -> 
          TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[18, 3], 18, {All}], 
          "InitialData" -> TypeSystem`PackageScope`CacheHandle[95491826], 
          "Type" -> TypeSystem`Vector[
            TypeSystem`Vector[
             TypeSystem`Atom[String], 3], 18], "HandleQ" -> True, "RowTarget" -> 
          20, "Data" -> TypeSystem`PackageScope`CacheHandle[95491826]], 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
             Style[
              Grid[{{
                 Pane[
                  Annotation["Name", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[1, 1]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["City, ST", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[1, 2]], "Mouse"], 
                  ImageSize -> {{76.80000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Current/Most Recent Team", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[1, 3]], "Mouse"], 
                  ImageSize -> {{230.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Aaron Moredock", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[2, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Cane Ridge, TN", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[2, 2]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[2, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Adam Goff", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[3, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["New York, NY", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[3, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Georgetown Brewing", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[3, 3]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Alex de Frondeville", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[4, 1]], "Mouse"], 
                  ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Arlington, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[4, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[4, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Arnold Sanchez", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[5, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Brooklyn, NY", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[5, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[5, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Billy Maroon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[6, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Philadelphia, PA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[6, 2]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[6, 3]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["David Turell", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[7, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Durham, NH", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[7, 2]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon*", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[7, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Eric Olson", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[8, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Encinitas, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[8, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[8, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Frankus Flores", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[9, 1]], "Mouse"], 
                  ImageSize -> {{134.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Oakland, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[9, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Shadows", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[9, 3]], "Mouse"], 
                  ImageSize -> {{67.20000000000002, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Fritz Burkhardt", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[10, 1]], "Mouse"], 
                  ImageSize -> {{144.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["South Burlington, VT", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[10, 2]], "Mouse"], 
                  ImageSize -> {{192.00000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[10, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Gabe Fuzat", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[11, 1]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Pearland, TX", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[11, 2]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Tejas", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[11, 3]], "Mouse"], 
                  ImageSize -> {{48.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Gary LeDonne", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[12, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Western Springs, IL", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[12, 2]], "Mouse"], 
                  ImageSize -> {{182.40000000000003`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["WSUC", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[12, 3]], "Mouse"], 
                  ImageSize -> {{38.400000000000006`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jim Parinella", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[13, 1]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Sudbury, MA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[13, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[13, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["John Hammond", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[14, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Atlanta, GA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[14, 2]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[14, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Jon Meade", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[15, 1]], "Mouse"], 
                  ImageSize -> {{86.4, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Nashville, TN", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[15, 2]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Reckon", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[15, 3]], "Mouse"], 
                  ImageSize -> {{57.60000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Matthew Krei", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[16, 1]], "Mouse"], 
                  ImageSize -> {{115.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Aurora, CO", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[16, 2]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Johnny Encore", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[16, 3]], "Mouse"], 
                  ImageSize -> {{124.80000000000001`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Stephen LaCrosse", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[17, 1]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Indianapolis, IN", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[17, 2]], "Mouse"], 
                  ImageSize -> {{153.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Georgetown Brewing", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[17, 3]], "Mouse"], 
                  ImageSize -> {{172.8, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}, {
                 Pane[
                  Annotation["Steve Dugan", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[18, 1]], "Mouse"], 
                  ImageSize -> {{105.60000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["Santa Barbara, CA", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[18, 2]], "Mouse"], 
                  ImageSize -> {{163.20000000000002`, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}], 
                 Pane[
                  Annotation["No Country", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   236278897][
                    GeneralUtilities`Slice[18, 3]], "Mouse"], 
                  ImageSize -> {{96.00000000000001, Full}, Automatic}, 
                  Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                   MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                   MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                   MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                 FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
               Dividers -> All, FrameStyle -> GrayLevel[0.85], 
               BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
              LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
              False, ShowAutoStyles -> False]], 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
           TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
          Dynamic[
           TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
           TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
              Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
              
              Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed,
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                  TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                  TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                  TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 236278897][
                  TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                 Not[
                  FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                 TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
            TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
              FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
              TypeSystem`SparseGrid[
               TypeSystem`H["(data no longer present)"]], 
              If[GeneralUtilities`$DebugMode, 
               Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
                 TypeSystem`NestedGrid`PackagePrivate`formatState[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
           TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
          DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`alignBar[
          TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
            TypeSystem`PackageScope`Pathbar[
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`updateState[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 236278897]]]], 
          TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
          Dynamic[
           Replace[
            MouseAnnotation[Null], {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[236278897][
              Null] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[236278897][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                Blank[]]] :> (
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 14}]}, 
       DynamicBox[
        ToBoxes[
         Column[
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
           TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
            TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
            TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
             TypeSystem`NestedGrid`PackagePrivate`alignBar[
             TypeSystem`NestedGrid`PackagePrivate`$state$$][
             TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
          If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
            0, {{}, {0, 0.05, 0}}]], StandardForm], 
        ImageSizeCache -> {636., {230., 236.}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
       TypeSystem`NestedGrid`PackagePrivate`deleteState[
        TypeSystem`NestedGrid`PackagePrivate`$state$$], 
       DynamicModuleValues :> {}, Initialization :> 
       Block[{$ContextPath = $ContextPath}, 
         Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
    "CopyTag",
    DisplayFunction->(#& ),
    InterpretationFunction->("Dataset[<>]"& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.7072184668477697`*^9, 3.7072184937396164`*^9}, {
  3.707218568140122*^9, 3.707218621440177*^9}, {3.707218718724824*^9, 
  3.7072187237867165`*^9}},ExpressionUUID->"f1e674d9-f852-4801-ab05-\
1bd803417517"]
}, Open  ]]
},
WindowSize->{1424, 877},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 434, 9, 30, "Input", "ExpressionUUID" -> \
"86d04944-6e47-4124-b1c0-d1dd3ddcf81c"],
Cell[1017, 33, 2461, 36, 829, "Output", "ExpressionUUID" -> \
"619f0aa3-b284-4d0a-bb3b-94e9e10a2374"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3515, 74, 450, 11, 30, "Input", "ExpressionUUID" -> \
"887399c5-3220-44c3-b045-8333ab0ff610"],
Cell[3968, 87, 1359, 19, 525, "Output", "ExpressionUUID" -> \
"c3aa407e-22a5-4c7a-b03d-0538b81ba036"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5364, 111, 313, 7, 30, "Input", "ExpressionUUID" -> \
"e8ec9a06-13c5-4bfa-8de4-3bae13e6d93a"],
Cell[5680, 120, 535, 13, 30, "Output", "ExpressionUUID" -> \
"906ca9f6-d4b0-4b37-b0c5-85080505817f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6252, 138, 231, 5, 30, "Input", "ExpressionUUID" -> \
"fee15b2e-64af-4cc9-b495-317846c58724"],
Cell[6486, 145, 300, 8, 37, "Output", "ExpressionUUID" -> \
"981ecea6-989b-4b42-88d8-5bc0443106cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6823, 158, 282, 7, 30, "Input", "ExpressionUUID" -> \
"8aed4b54-c2f9-4285-ade2-e8dd7fc11d1e"],
Cell[7108, 167, 14282, 320, 582, "Output", "ExpressionUUID" -> \
"104dbf08-9107-4930-a290-9711bcaca7aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21427, 492, 288, 7, 30, "Input", "ExpressionUUID" -> \
"af4003cd-ac99-4e7a-8b24-492af14993cf"],
Cell[21718, 501, 19705, 326, 1741, "Output", "ExpressionUUID" -> \
"1ff680c9-ce5c-47a8-9eda-3658324f54ab"]
}, Open  ]],
Cell[41438, 830, 452, 10, 30, "Input", "ExpressionUUID" -> \
"de86e309-6715-47ee-ac52-4348496ed28e"],
Cell[CellGroupData[{
Cell[41915, 844, 279, 8, 30, "Input", "ExpressionUUID" -> \
"ede1b712-5f29-436f-a262-6b91749fb6d6"],
Cell[42197, 854, 1858, 35, 298, "Output", "ExpressionUUID" -> \
"0e7fd40a-5c32-4820-81ea-a564f88a74a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44092, 894, 992, 26, 30, "Input", "ExpressionUUID" -> \
"50c8903a-7274-4348-b25c-1ed4c4f2f847"],
Cell[45087, 922, 30437, 581, 433, "Output", "ExpressionUUID" -> \
"c0739398-6092-401e-bd86-88b3300d50b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75561, 1508, 459, 11, 30, "Input", "ExpressionUUID" -> \
"2b5bf95a-06bd-4a41-9025-1a40681b05c1"],
Cell[76023, 1521, 33198, 656, 433, "Output", "ExpressionUUID" -> \
"77dfe037-9574-4fdc-bc89-d7864e4e4f34"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109258, 2182, 253, 6, 30, "Input", "ExpressionUUID" -> \
"23bfc396-6ac6-4e91-9ce0-37fa8f495b6a"],
Cell[109514, 2190, 247550, 4154, 237, 130670, 2237, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"126c389c-1da1-4897-8023-95a2d8594159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357101, 6349, 500, 12, 30, "Input", "ExpressionUUID" -> \
"822cab8c-f167-442c-9322-a8fc7813f60c"],
Cell[357604, 6363, 186507, 3513, 1895, "Output", "ExpressionUUID" -> \
"f1e674d9-f852-4801-ab05-1bd803417517"]
}, Open  ]]
}
]
*)

